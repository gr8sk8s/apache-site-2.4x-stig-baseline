{"name":"Apache_Server_2-4_UNIX_Site","title":"Apache Server 2.4 UNIX Site based upon the Apache_Server_2-4_UNIX_Site Security Technical Implementation Guide","maintainer":"MITRE SAF Team","copyright":"MITRE, 2022","copyright_email":"saf@groups.mitre.org","license":"Apache-2.0","summary":"InSpec testing for baseline compliance with the Apache_Server_2-4_UNIX_Site STIG","version":"2.1.0","inspec_version":">= 4.0","inputs":[{"name":"config_path","options":{"type":"String","value":"/usr/local/apache2/conf/httpd.conf"}},{"name":"proxy_server","options":{"type":"Boolean","value":false}},{"name":"apache_version","options":{"type":"String","value":"2.4"}},{"name":"server_admins","options":{"type":"Array","value":["httpd"]}},{"name":"server_admin_groups","options":{"type":"Array","value":["httpd"]}},{"name":"host_based_firewall_used","options":{"type":"Boolean","value":false}}],"supports":[],"controls":[{"title":"The Apache web server must perform server-side session management.","desc":"Session management is the practice of protecting the bulk of the user\nauthorization and identity information. This data can be stored on the client\nsystem or on the server.\n\n    When the session information is stored on the client, the session ID, along\nwith the user authorization and identity information, is sent along with each\nclient request and is stored in a cookie, embedded in the uniform resource\nlocator (URL), or placed in a hidden field on the displayed form. Each of these\noffers advantages and disadvantages. The biggest disadvantage to all three is\nthe possibility of the hijacking of a session along with all of the user's\ncredentials.\n\n    When the user authorization and identity information is stored on the\nserver in a protected and encrypted database, the communication between the\nclient and Apache web server will only send the session identifier, and the\nserver can then retrieve user credentials for the session when needed. If,\nduring transmission, the session were to be hijacked, the user's credentials\nwould not be compromised.","descriptions":{"default":"Session management is the practice of protecting the bulk of the user\nauthorization and identity information. This data can be stored on the client\nsystem or on the server.\n\n    When the session information is stored on the client, the session ID, along\nwith the user authorization and identity information, is sent along with each\nclient request and is stored in a cookie, embedded in the uniform resource\nlocator (URL), or placed in a hidden field on the displayed form. Each of these\noffers advantages and disadvantages. The biggest disadvantage to all three is\nthe possibility of the hijacking of a session along with all of the user's\ncredentials.\n\n    When the user authorization and identity information is stored on the\nserver in a protected and encrypted database, the communication between the\nclient and Apache web server will only send the session identifier, and the\nserver can then retrieve user credentials for the session when needed. If,\nduring transmission, the session were to be hijacked, the user's credentials\nwould not be compromised.","rationale":"","check":"In a command line, run \"httpd -M | grep -i session_module\" and \"httpd -M\n| grep -i usertrack_module\".\n\n    If \"session_module\" module and \"usertrack_module\" are not enabled or do\nnot exist, this is a finding.","fix":"If the modules are not installed, install any missing packages.\n\nAdd the following lines to the \"httpd.conf\" file:\n\nLoadModule usertrack_module modules/mod_usertrack.so\n\nLoadModule session_module modules/mod_session.so\n\nAdditional documentation can be found at:\n\nhttps://httpd.apache.org/docs/2.4/mod/mod_usertrack.html\n\nhttps://httpd.apache.org/docs/2.4/mod/mod_session.html\n\nRestart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000001-WSR-000002","gid":"V-92761","rid":"SV-102849r1_rule","stig_id":"AS24-U2-000020","fix_id":"F-99005r1_fix","cci":["CCI-000054"],"nist":["AC-10"]},"code":"control 'V-92761' do\n  title 'The Apache web server must perform server-side session management.'\n  desc  \"Session management is the practice of protecting the bulk of the user\nauthorization and identity information. This data can be stored on the client\nsystem or on the server.\n\n    When the session information is stored on the client, the session ID, along\nwith the user authorization and identity information, is sent along with each\nclient request and is stored in a cookie, embedded in the uniform resource\nlocator (URL), or placed in a hidden field on the displayed form. Each of these\noffers advantages and disadvantages. The biggest disadvantage to all three is\nthe possibility of the hijacking of a session along with all of the user's\ncredentials.\n\n    When the user authorization and identity information is stored on the\nserver in a protected and encrypted database, the communication between the\nclient and Apache web server will only send the session identifier, and the\nserver can then retrieve user credentials for the session when needed. If,\nduring transmission, the session were to be hijacked, the user's credentials\nwould not be compromised.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i session_module\\\" and \\\"httpd -M\n| grep -i usertrack_module\\\".\n\n    If \\\"session_module\\\" module and \\\"usertrack_module\\\" are not enabled or do\nnot exist, this is a finding.\n  \"\n  desc 'fix', \"\n    If the modules are not installed, install any missing packages.\n\n    Add the following lines to the \\\"httpd.conf\\\" file:\n\n    LoadModule usertrack_module modules/mod_usertrack.so\n\n    LoadModule session_module modules/mod_session.so\n\n    Additional documentation can be found at:\n\n    https://httpd.apache.org/docs/2.4/mod/mod_usertrack.html\n\n    https://httpd.apache.org/docs/2.4/mod/mod_session.html\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000001-WSR-000002'\n  tag gid: 'V-92761'\n  tag rid: 'SV-102849r1_rule'\n  tag stig_id: 'AS24-U2-000020'\n  tag fix_id: 'F-99005r1_fix'\n  tag cci: ['CCI-000054']\n  tag nist: ['AC-10']\n\n  session_module = command('httpd -M | grep session_module').stdout\n  usertrack_module = command('httpd -M | grep usertrack_module').stdout\n\n  describe session_module do\n    it { should include 'session_module' }\n  end\n\n  describe usertrack_module do\n    it { should include 'usertrack_module' }\n  end\nend\n","source_location":{"ref":"./controls/V-92761.rb","line":1},"id":"V-92761"},{"title":"The Apache web server must use encryption strength in accordance with\nthe categorization of data hosted by the Apache web server when remote\nconnections are provided.","desc":"The Apache web server has several remote communications channels.\nExamples are user requests via http/https, communication to a backend database,\nand communication to authenticate users. The encryption used to communicate\nmust match the data that is being retrieved or presented.\n\n    Methods of communication are \"http\" for publicly displayed information,\n\"https\" to encrypt when user data is being transmitted, VPN tunneling, or\nother encryption methods to a database.","descriptions":{"default":"The Apache web server has several remote communications channels.\nExamples are user requests via http/https, communication to a backend database,\nand communication to authenticate users. The encryption used to communicate\nmust match the data that is being retrieved or presented.\n\n    Methods of communication are \"http\" for publicly displayed information,\n\"https\" to encrypt when user data is being transmitted, VPN tunneling, or\nother encryption methods to a database.","rationale":"","check":"In a command line, run \"httpd -M | grep -i ssl_module\".\n\n    If the \"ssl_module\" is not enabled, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directive \"SSLProtocol\" in the \"httpd.conf\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"SSLProtocol\"\n\n    If the \"SSLProtocol\" directive is missing or does not look like the\nfollowing, this is a finding:\n\n    SSLProtocol -ALL +TLSv1.2\n\n    If the TLS version is not TLS 1.2 or higher, according to NIST SP 800-52\nRev 2, or if non-FIPS-approved algorithms are enabled, this is a finding.\n\n    NOTE: In some cases, web servers are configured in an environment to\nsupport load balancing. This configuration most likely uses a content switch to\ncontrol traffic to the various web servers. In this situation, the TLS\ncertificate for the websites may be installed on the content switch versus the\nindividual websites. This solution is acceptable as long as the web servers are\nisolated from the general population LAN. Users should not have the ability to\nbypass the content switch to access the websites.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Ensure the \"SSLProtocol\" is added and looks like the following:\n\n    SSLProtocol -ALL +TLSv1.2\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000014-WSR-000006","satisfies":["SRG-APP-000014-WSR-000006","SRG-APP-000015-WSR-000014","SRG-APP-000033-WSR-000169","SRG-APP-000172-WSR-000104","SRG-APP-000179-WSR-000110","SRG-APP-000179-WSR-000111","SRG-APP-000206-WSR-000128","SRG-APP-000429-WSR-000113","SRG-APP-000439-WSR-000151","SRG-APP-000439-WSR-000152","SRG-APP-000439-WSR-000156","SRG-APP-000441-WSR-000181","SRG-APP-000442-WSR-000182"],"gid":"V-92763","rid":"SV-102851r1_rule","stig_id":"AS24-U2-000030","fix_id":"F-99007r1_fix","cci":["CCI-000068","CCI-000197","CCI-000213","CCI-000803","CCI-001166","CCI-001453","CCI-002418","CCI-002420","CCI-002422","CCI-002476"],"nist":["AC-17 (2)","IA-5 (1) (c)","AC-3","IA-7","SC-18 (1)","AC-17\n(2)","SC-8","SC-8 (2)","SC-8 (2)","SC-28 (1)"]},"code":"control 'V-92763' do\n  title \"The Apache web server must use encryption strength in accordance with\nthe categorization of data hosted by the Apache web server when remote\nconnections are provided.\"\n  desc  \"The Apache web server has several remote communications channels.\nExamples are user requests via http/https, communication to a backend database,\nand communication to authenticate users. The encryption used to communicate\nmust match the data that is being retrieved or presented.\n\n    Methods of communication are \\\"http\\\" for publicly displayed information,\n\\\"https\\\" to encrypt when user data is being transmitted, VPN tunneling, or\nother encryption methods to a database.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i ssl_module\\\".\n\n    If the \\\"ssl_module\\\" is not enabled, this is a finding.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the directive \\\"SSLProtocol\\\" in the \\\"httpd.conf\\\" file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"SSLProtocol\\\"\n\n    If the \\\"SSLProtocol\\\" directive is missing or does not look like the\nfollowing, this is a finding:\n\n    SSLProtocol -ALL +TLSv1.2\n\n    If the TLS version is not TLS 1.2 or higher, according to NIST SP 800-52\nRev 2, or if non-FIPS-approved algorithms are enabled, this is a finding.\n\n    NOTE: In some cases, web servers are configured in an environment to\nsupport load balancing. This configuration most likely uses a content switch to\ncontrol traffic to the various web servers. In this situation, the TLS\ncertificate for the websites may be installed on the content switch versus the\nindividual websites. This solution is acceptable as long as the web servers are\nisolated from the general population LAN. Users should not have the ability to\nbypass the content switch to access the websites.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Ensure the \\\"SSLProtocol\\\" is added and looks like the following:\n\n    SSLProtocol -ALL +TLSv1.2\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000014-WSR-000006'\n  tag satisfies: %w(SRG-APP-000014-WSR-000006 SRG-APP-000015-WSR-000014\nSRG-APP-000033-WSR-000169 SRG-APP-000172-WSR-000104\nSRG-APP-000179-WSR-000110 SRG-APP-000179-WSR-000111\nSRG-APP-000206-WSR-000128 SRG-APP-000429-WSR-000113\nSRG-APP-000439-WSR-000151 SRG-APP-000439-WSR-000152\nSRG-APP-000439-WSR-000156 SRG-APP-000441-WSR-000181\nSRG-APP-000442-WSR-000182)\n  tag gid: 'V-92763'\n  tag rid: 'SV-102851r1_rule'\n  tag stig_id: 'AS24-U2-000030'\n  tag fix_id: 'F-99007r1_fix'\n  tag cci: %w(CCI-000068 CCI-000197 CCI-000213 CCI-000803\nCCI-001166 CCI-001453 CCI-002418 CCI-002420 CCI-002422\nCCI-002476)\n  tag nist: ['AC-17 (2)', 'IA-5 (1) (c)', 'AC-3', 'IA-7', 'SC-18 (1)', \"AC-17\n(2)\", 'SC-8', 'SC-8 (2)', 'SC-8 (2)', 'SC-28 (1)']\n\n  config_path = input('config_path')\n  ssl_module = command('httpd -M | grep -i ssl_module').stdout\n  supported_protocols = ['-ALL', '+TLSv1.2', '+TLSv1.3']\n\n  describe ssl_module do\n    it { should include 'ssl_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('SSLProtocol') { should_not be_nil }\n    its('SSLProtocol') { should include '-ALL' }\n    its('SSLProtocol') { should include '+TLSv1.2' }\n  end\n\n  unless apache_conf(config_path).SSLProtocol.nil?\n    apache_conf(config_path).SSLProtocol.each do |value|\n      describe 'SSLProtocol value must use TLS Version 1.2' do\n        subject { value }\n        it { should be_in supported_protocols }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92763.rb","line":1},"id":"V-92763"},{"title":"The Apache web server must produce log records containing sufficient\ninformation to establish what type of events occurred.","desc":"Apache web server logging capability is critical for accurate forensic\nanalysis. Without sufficient and accurate information, a correct replay of the\nevents cannot be determined.\n\n    Ascertaining the correct type of event that occurred is important during\nforensic analysis. The correct determination of the event and when it occurred\nis important in relation to other events that happened at that same time.\n\n    Without sufficient information establishing what type of log event\noccurred, investigation into the cause of event is severely hindered. Log\nrecord content that may be necessary to satisfy the requirement of this control\nincludes but is not limited to time stamps, source and destination IP\naddresses, user/process identifiers, event descriptions, application-specific\nevents, success/fail indications, file names involved, access control, and flow\ncontrol rules invoked.","descriptions":{"default":"Apache web server logging capability is critical for accurate forensic\nanalysis. Without sufficient and accurate information, a correct replay of the\nevents cannot be determined.\n\n    Ascertaining the correct type of event that occurred is important during\nforensic analysis. The correct determination of the event and when it occurred\nis important in relation to other events that happened at that same time.\n\n    Without sufficient information establishing what type of log event\noccurred, investigation into the cause of event is severely hindered. Log\nrecord content that may be necessary to satisfy the requirement of this control\nincludes but is not limited to time stamps, source and destination IP\naddresses, user/process identifiers, event descriptions, application-specific\nevents, success/fail indications, file names involved, access control, and flow\ncontrol rules invoked.","rationale":"","check":"In a command line, run \"httpd -M | grep -i log_config_module\".\n\n    If the \"log_config_module\" is not enabled, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the directive \"LogFormat\" in the httpd.conf file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"LogFormat\"\n\n    If the \"LogFormat\" directive is missing or does not look like the\nfollowing, this is a finding:\n\n    LogFormat \"%a %A %h %H %l %m %s %t %u %U \\\"%{Referer}i\\\" \" common","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Uncomment the \"log_config_module\" module line.\n\n    Configure the \"LogFormat\" in the \"httpd.conf\" file to look like the\nfollowing:\n\n    LogFormat \"%a %A %h %H %l %m %s %t %u %U \\\"%{Referer}i\\\" \" common\n\n    Restart Apache: apachectl restart\n\n    NOTE: Your log format may be using different variables based on your\nenvironment, however  it should be verified to be producing the same end result\nof logged elements."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000095-WSR-000056","gid":"V-92769","rid":"SV-102857r1_rule","stig_id":"AS24-U2-000090","fix_id":"F-99013r1_fix","cci":["CCI-000130"],"nist":["AU-3"]},"code":"control 'V-92769' do\n  title \"The Apache web server must produce log records containing sufficient\ninformation to establish what type of events occurred.\"\n  desc  \"Apache web server logging capability is critical for accurate forensic\nanalysis. Without sufficient and accurate information, a correct replay of the\nevents cannot be determined.\n\n    Ascertaining the correct type of event that occurred is important during\nforensic analysis. The correct determination of the event and when it occurred\nis important in relation to other events that happened at that same time.\n\n    Without sufficient information establishing what type of log event\noccurred, investigation into the cause of event is severely hindered. Log\nrecord content that may be necessary to satisfy the requirement of this control\nincludes but is not limited to time stamps, source and destination IP\naddresses, user/process identifiers, event descriptions, application-specific\nevents, success/fail indications, file names involved, access control, and flow\ncontrol rules invoked.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i log_config_module\\\".\n\n    If the \\\"log_config_module\\\" is not enabled, this is a finding.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the directive \\\"LogFormat\\\" in the httpd.conf file:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"LogFormat\\\"\n\n    If the \\\"LogFormat\\\" directive is missing or does not look like the\nfollowing, this is a finding:\n\n    LogFormat \\\"%a %A %h %H %l %m %s %t %u %U \\\\\\\"%{Referer}i\\\\\\\" \\\" common\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Uncomment the \\\"log_config_module\\\" module line.\n\n    Configure the \\\"LogFormat\\\" in the \\\"httpd.conf\\\" file to look like the\nfollowing:\n\n    LogFormat \\\"%a %A %h %H %l %m %s %t %u %U \\\\\\\"%{Referer}i\\\\\\\" \\\" common\n\n    Restart Apache: apachectl restart\n\n    NOTE: Your log format may be using different variables based on your\nenvironment, however  it should be verified to be producing the same end result\nof logged elements.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000095-WSR-000056'\n  tag gid: 'V-92769'\n  tag rid: 'SV-102857r1_rule'\n  tag stig_id: 'AS24-U2-000090'\n  tag fix_id: 'F-99013r1_fix'\n  tag cci: ['CCI-000130']\n  tag nist: ['AU-3']\n\n  config_path = input('config_path')\n  log_config = command('httpd -M | grep -i log_config_module').stdout\n\n  describe log_config do\n    it { should include 'log_config_module' }\n  end\n\n  describe apache_conf(config_path) do\n    subject { file(config_path).content.to_s }\n    it { should match /^\\s*LogFormat \\\"%a %A %h %H %l %m %s %t %u %U \\\\\\\"%{Referer}i\\\\\\\" \\\" common/ }\n  end\nend\n","source_location":{"ref":"./controls/V-92769.rb","line":1},"id":"V-92769"},{"title":"The Apache web server must not perform user management for hosted\napplications.","desc":"User management and authentication can be an essential part of any\napplication hosted by the web server. Along with authenticating users, the user\nmanagement function must perform several other tasks such as password\ncomplexity, locking users after a configurable number of failed logons, and\nmanagement of temporary and emergency accounts. All of this must be done\nenterprise-wide.\n\n    The web server contains a minimal user management function, but the web\nserver user management function does not offer enterprise-wide user management,\nand user management is not the primary function of the web server. User\nmanagement for the hosted applications should be done through a facility that\nis built for enterprise-wide user management, like LDAP and Active Directory.","descriptions":{"default":"User management and authentication can be an essential part of any\napplication hosted by the web server. Along with authenticating users, the user\nmanagement function must perform several other tasks such as password\ncomplexity, locking users after a configurable number of failed logons, and\nmanagement of temporary and emergency accounts. All of this must be done\nenterprise-wide.\n\n    The web server contains a minimal user management function, but the web\nserver user management function does not offer enterprise-wide user management,\nand user management is not the primary function of the web server. User\nmanagement for the hosted applications should be done through a facility that\nis built for enterprise-wide user management, like LDAP and Active Directory.","rationale":"","check":"Interview the System Administrator (SA) about the role of the Apache web\nserver.\n\n    If the web server is hosting an application, have the SA provide supporting\ndocumentation on how the application's user management is accomplished outside\nof the web server.\n\n    If the web server is not hosting an application, this is Not Applicable.\n\n    If the web server is performing user management for hosted applications,\nthis is a finding.\n\n    If the web server is hosting an application and the SA cannot provide\nsupporting documentation on how the application's user management is\naccomplished outside of the Apache web server, this is a finding.","fix":"Reconfigure any hosted applications on the Apache web server to perform\nuser management outside the web server.\n\n    Document how the hosted application user management is accomplished."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-WSR-000015","gid":"V-92771","rid":"SV-102859r1_rule","stig_id":"AS24-U2-000240","fix_id":"F-99015r1_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92771' do\n  title \"The Apache web server must not perform user management for hosted\napplications.\"\n  desc  \"User management and authentication can be an essential part of any\napplication hosted by the web server. Along with authenticating users, the user\nmanagement function must perform several other tasks such as password\ncomplexity, locking users after a configurable number of failed logons, and\nmanagement of temporary and emergency accounts. All of this must be done\nenterprise-wide.\n\n    The web server contains a minimal user management function, but the web\nserver user management function does not offer enterprise-wide user management,\nand user management is not the primary function of the web server. User\nmanagement for the hosted applications should be done through a facility that\nis built for enterprise-wide user management, like LDAP and Active Directory.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Interview the System Administrator (SA) about the role of the Apache web\nserver.\n\n    If the web server is hosting an application, have the SA provide supporting\ndocumentation on how the application's user management is accomplished outside\nof the web server.\n\n    If the web server is not hosting an application, this is Not Applicable.\n\n    If the web server is performing user management for hosted applications,\nthis is a finding.\n\n    If the web server is hosting an application and the SA cannot provide\nsupporting documentation on how the application's user management is\naccomplished outside of the Apache web server, this is a finding.\n  \"\n  desc 'fix', \"\n    Reconfigure any hosted applications on the Apache web server to perform\nuser management outside the web server.\n\n    Document how the hosted application user management is accomplished.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000141-WSR-000015'\n  tag gid: 'V-92771'\n  tag rid: 'SV-102859r1_rule'\n  tag stig_id: 'AS24-U2-000240'\n  tag fix_id: 'F-99015r1_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  describe 'Interview the System Administrator (SA) about the role of the Apache web server.' do\n    skip \"If the web server is hosting an application, have the SA provide supporting documentation\n      on how the application's user management is accomplished outside of the web server.\n      If the web server is not hosting an application, this is Not Applicable.\n      If the web server is performing user management for hosted applications, this is a finding.\n      If the web server is hosting an application and the SA cannot provide supporting\n      documentation on how the application's user management is accomplished outside\n      of the Apache web server, this is a finding.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92771.rb","line":1},"id":"V-92771"},{"title":"The Apache web server must have Multipurpose Internet Mail Extensions\n(MIME) that invoke operating system shell programs disabled.","desc":"Controlling what a user of a hosted application can access is part of\nthe security posture of the web server. Any time a user can access more\nfunctionality than is needed for the operation of the hosted application poses\na security issue. A user with too much access can view information that is not\nneeded for the user's job role, or the user could use the function in an\nunintentional manner.\n\n    A MIME tells the web server what type of program various file types and\nextensions are and what external utilities or programs are needed to execute\nthe file type.\n\n    A shell is a program that serves as the basic interface between the user\nand the operating system, so hosted application users must not have access to\nthese programs. Shell programs may execute shell escapes and can then perform\nunauthorized activities that could damage the security posture of the web\nserver.","descriptions":{"default":"Controlling what a user of a hosted application can access is part of\nthe security posture of the web server. Any time a user can access more\nfunctionality than is needed for the operation of the hosted application poses\na security issue. A user with too much access can view information that is not\nneeded for the user's job role, or the user could use the function in an\nunintentional manner.\n\n    A MIME tells the web server what type of program various file types and\nextensions are and what external utilities or programs are needed to execute\nthe file type.\n\n    A shell is a program that serves as the basic interface between the user\nand the operating system, so hosted application users must not have access to\nthese programs. Shell programs may execute shell escapes and can then perform\nunauthorized activities that could damage the security posture of the web\nserver.","rationale":"","check":"In a command line, run \"httpd -M | grep -i ssl_module\".\n\n    If the \"ssl_module\" is not enabled, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    If \"Action\" or \"AddHandler\" exist and they configure .exe, .dll, .com,\n.bat, or .csh, or any other shell as a viewer for documents, this is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Disable MIME types for .exe, .dll, .com, .bat, and .csh programs.\n\n    If \"Action\" or \"AddHandler\" exist and they configure any of the\nfollowing (.exe, .dll, .com, .bat, or .csh), remove those references.\n\n    Restart Apache: apachectl restart\n\n    Ensure this process is documented and approved by the ISSO."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-WSR-000081","gid":"V-92773","rid":"SV-102861r1_rule","stig_id":"AS24-U2-000300","fix_id":"F-99017r1_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92773' do\n  title \"The Apache web server must have Multipurpose Internet Mail Extensions\n(MIME) that invoke operating system shell programs disabled.\"\n  desc  \"Controlling what a user of a hosted application can access is part of\nthe security posture of the web server. Any time a user can access more\nfunctionality than is needed for the operation of the hosted application poses\na security issue. A user with too much access can view information that is not\nneeded for the user's job role, or the user could use the function in an\nunintentional manner.\n\n    A MIME tells the web server what type of program various file types and\nextensions are and what external utilities or programs are needed to execute\nthe file type.\n\n    A shell is a program that serves as the basic interface between the user\nand the operating system, so hosted application users must not have access to\nthese programs. Shell programs may execute shell escapes and can then perform\nunauthorized activities that could damage the security posture of the web\nserver.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i ssl_module\\\".\n\n    If the \\\"ssl_module\\\" is not enabled, this is a finding.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    If \\\"Action\\\" or \\\"AddHandler\\\" exist and they configure .exe, .dll, .com,\n.bat, or .csh, or any other shell as a viewer for documents, this is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Disable MIME types for .exe, .dll, .com, .bat, and .csh programs.\n\n    If \\\"Action\\\" or \\\"AddHandler\\\" exist and they configure any of the\nfollowing (.exe, .dll, .com, .bat, or .csh), remove those references.\n\n    Restart Apache: apachectl restart\n\n    Ensure this process is documented and approved by the ISSO.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000141-WSR-000081'\n  tag gid: 'V-92773'\n  tag rid: 'SV-102861r1_rule'\n  tag stig_id: 'AS24-U2-000300'\n  tag fix_id: 'F-99017r1_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  config_path = input('config_path')\n  ssl_module = command('httpd -M | grep -i ssl_module').stdout\n\n  describe ssl_module do\n    it { should include 'ssl_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('AddHandler.to_s') { should_not match '.exe' }\n    its('AddHandler.to_s') { should_not match '.dll' }\n    its('AddHandler.to_s') { should_not match '.com' }\n    its('AddHandler.to_s') { should_not match '.bat' }\n    its('AddHandler.to_s') { should_not match '.csh' }\n  end\n\n  describe apache_conf(config_path) do\n    its('Action.to_s') { should_not match '.exe' }\n    its('Action.to_s') { should_not match '.dll' }\n    its('Action.to_s') { should_not match '.com' }\n    its('Action.to_s') { should_not match '.bat' }\n    its('Action.to_s') { should_not match '.csh' }\n  end\nend\n","source_location":{"ref":"./controls/V-92773.rb","line":1},"id":"V-92773"},{"title":"The Apache web server must allow mappings to unused and vulnerable\nscripts to be removed.","desc":"Scripts allow server-side processing on behalf of the hosted\napplication user or as processes needed in the implementation of hosted\napplications. Removing scripts not needed for application operation or deemed\nvulnerable helps to secure the web server.\n\n    To ensure scripts are not added to the web server and run maliciously,\nscript mappings that are not needed or used by the web server for hosted\napplication operation must be removed.","descriptions":{"default":"Scripts allow server-side processing on behalf of the hosted\napplication user or as processes needed in the implementation of hosted\napplications. Removing scripts not needed for application operation or deemed\nvulnerable helps to secure the web server.\n\n    To ensure scripts are not added to the web server and run maliciously,\nscript mappings that are not needed or used by the web server for hosted\napplication operation must be removed.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review \"Script\", \"ScriptAlias\" or \"ScriptAliasMatch\", or\n\"ScriptInterpreterSource\" directives.\n\n    Go into each directory and locate \"cgi-bin\" files.\n\n    If any scripts are present that are not needed for application operation,\nthis is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Remove any scripts in \"cgi-bin\" directory if they are not needed for\napplication operation.\n\n    Ensure this process is documented and approved by the ISSO."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-WSR-000082","gid":"V-92775","rid":"SV-102863r1_rule","stig_id":"AS24-U2-000310","fix_id":"F-99019r1_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92775' do\n  title \"The Apache web server must allow mappings to unused and vulnerable\nscripts to be removed.\"\n  desc  \"Scripts allow server-side processing on behalf of the hosted\napplication user or as processes needed in the implementation of hosted\napplications. Removing scripts not needed for application operation or deemed\nvulnerable helps to secure the web server.\n\n    To ensure scripts are not added to the web server and run maliciously,\nscript mappings that are not needed or used by the web server for hosted\napplication operation must be removed.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Review \\\"Script\\\", \\\"ScriptAlias\\\" or \\\"ScriptAliasMatch\\\", or\n\\\"ScriptInterpreterSource\\\" directives.\n\n    Go into each directory and locate \\\"cgi-bin\\\" files.\n\n    If any scripts are present that are not needed for application operation,\nthis is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Remove any scripts in \\\"cgi-bin\\\" directory if they are not needed for\napplication operation.\n\n    Ensure this process is documented and approved by the ISSO.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000141-WSR-000082'\n  tag gid: 'V-92775'\n  tag rid: 'SV-102863r1_rule'\n  tag stig_id: 'AS24-U2-000310'\n  tag fix_id: 'F-99019r1_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  config_path = input('config_path')\n  apache_conf_file = apache_conf(config_path)\n  scripts = apache_conf_file.params('Script')\n  script_alias = apache_conf_file.params('ScriptAlias')\n  script_alias_match = apache_conf_file.params('ScriptAliasMatch')\n  script_interpreter_source = apache_conf_file.params('ScriptInterpreterSource')\n\n  check_dirs_final = []\n\n  scripts ? scripts.map { |e| check_dirs_final.push(e) } : nil\n  script_alias ? script_alias.map { |e| check_dirs_final.push(e) } : nil\n  script_alias_match ? script_alias_match.map { |e| check_dirs_final.push(e) } : nil\n  script_interpreter_source ? script_interpreter_source.map { |e| check_dirs_final.push(e) } : nil\n\n  describe 'Review any unused scripts' do\n    skip \"If any scripts are present that are not needed for application operation, this is a finding.\n    The following locations need to be checked for cgi-bin files. Remove any scripts that are not needed for application operation. \\n\\nScript Locations:\\n#{check_dirs_final.join(\"\\n\")}\"\n  end\nend\n","source_location":{"ref":"./controls/V-92775.rb","line":1},"id":"V-92775"},{"title":"The Apache web server must have resource mappings set to disable the\nserving of certain file types.","desc":"Resource mapping is the process of tying a particular file type to a\nprocess in the web server that can serve that type of file to a requesting\nclient and to identify which file types are not to be delivered to a client.\n\n    By not specifying which files can and cannot be served to a user, the web\nserver could deliver to a user web server configuration files, log files,\npassword files, etc.\n\n    The web server must only allow hosted application file types to be served\nto a user, and all other types must be disabled.","descriptions":{"default":"Resource mapping is the process of tying a particular file type to a\nprocess in the web server that can serve that type of file to a requesting\nclient and to identify which file types are not to be delivered to a client.\n\n    By not specifying which files can and cannot be served to a user, the web\nserver could deliver to a user web server configuration files, log files,\npassword files, etc.\n\n    The web server must only allow hosted application file types to be served\nto a user, and all other types must be disabled.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    If \"Action\" or \"AddHandler\" exist and they configure .exe, .dll, .com,\n.bat, or .csh, or any other shell as a viewer for documents, this is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Disable MIME types for .exe, .dll, .com, .bat, and .csh programs.\n\n    If \"Action\" or \"AddHandler\" exist and they configure .exe, .dll, .com,\n.bat, or .csh, remove those references.\n\n    Restart Apache: apachectl restart\n\n    Ensure this process is documented and approved by the ISSO."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-WSR-000083","gid":"V-92777","rid":"SV-102865r1_rule","stig_id":"AS24-U2-000320","fix_id":"F-99021r1_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92777' do\n  title \"The Apache web server must have resource mappings set to disable the\nserving of certain file types.\"\n  desc  \"Resource mapping is the process of tying a particular file type to a\nprocess in the web server that can serve that type of file to a requesting\nclient and to identify which file types are not to be delivered to a client.\n\n    By not specifying which files can and cannot be served to a user, the web\nserver could deliver to a user web server configuration files, log files,\npassword files, etc.\n\n    The web server must only allow hosted application file types to be served\nto a user, and all other types must be disabled.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    If \\\"Action\\\" or \\\"AddHandler\\\" exist and they configure .exe, .dll, .com,\n.bat, or .csh, or any other shell as a viewer for documents, this is a finding.\n\n    If this is not documented and approved by the Information System Security\nOfficer (ISSO), this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Disable MIME types for .exe, .dll, .com, .bat, and .csh programs.\n\n    If \\\"Action\\\" or \\\"AddHandler\\\" exist and they configure .exe, .dll, .com,\n.bat, or .csh, remove those references.\n\n    Restart Apache: apachectl restart\n\n    Ensure this process is documented and approved by the ISSO.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000141-WSR-000083'\n  tag gid: 'V-92777'\n  tag rid: 'SV-102865r1_rule'\n  tag stig_id: 'AS24-U2-000320'\n  tag fix_id: 'F-99021r1_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('AddHandler.to_s') { should_not match '.exe' }\n    its('AddHandler.to_s') { should_not match '.dll' }\n    its('AddHandler.to_s') { should_not match '.com' }\n    its('AddHandler.to_s') { should_not match '.bat' }\n    its('AddHandler.to_s') { should_not match '.csh' }\n  end\n\n  describe apache_conf(config_path) do\n    its('Action.to_s') { should_not match '.exe' }\n    its('Action.to_s') { should_not match '.dll' }\n    its('Action.to_s') { should_not match '.com' }\n    its('Action.to_s') { should_not match '.bat' }\n    its('Action.to_s') { should_not match '.csh' }\n  end\nend\n","source_location":{"ref":"./controls/V-92777.rb","line":1},"id":"V-92777"},{"title":"Users and scripts running on behalf of users must be contained to the\ndocument root or home directory tree of the Apache web server.","desc":"A web server is designed to deliver content and execute scripts or\napplications on the request of a client or user. Containing user requests to\nfiles in the directory tree of the hosted web application and limiting the\nexecution of scripts and applications guarantees that the user is not accessing\ninformation protected outside the application's realm.\n\n    The web server must also prohibit users from jumping outside the hosted\napplication directory tree through access to the user's home directory,\nsymbolic links or shortcuts, or through search paths for missing files.","descriptions":{"default":"A web server is designed to deliver content and execute scripts or\napplications on the request of a client or user. Containing user requests to\nfiles in the directory tree of the hosted web application and limiting the\nexecution of scripts and applications guarantees that the user is not accessing\ninformation protected outside the application's realm.\n\n    The web server must also prohibit users from jumping outside the hosted\napplication directory tree through access to the user's home directory,\nsymbolic links or shortcuts, or through search paths for missing files.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Verify there is a single \"Require\" directive with the value of \"all\ndenied\".\n\n    Verify there are no \"Allow\" or \"Deny\" directives in the root\n<Directory> element.\n\n    The following may be useful in extracting root directory elements from the\nApache configuration for auditing:\n\n    # perl -ne 'print if /^ *<Directory *\\//i .. /<\\/Directory/i'\n$APACHE_PREFIX/conf/httpd.conf\n\n    If there are \"Allow\" or \"Deny\" directives in the root <Directory>\nelement, this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Set the root directory directive as follows:\n\n    <Directory>\n    ...\n    Require all denied\n    ...\n    </Directory>\n\n    Remove any \"Deny\" and \"Allow\" directives from the root <Directory>\nelement.\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000141-WSR-000087","gid":"V-92779","rid":"SV-102867r1_rule","stig_id":"AS24-U2-000350","fix_id":"F-99023r1_fix","cci":["CCI-000381"],"nist":["CM-7 a"]},"code":"control 'V-92779' do\n  title \"Users and scripts running on behalf of users must be contained to the\ndocument root or home directory tree of the Apache web server.\"\n  desc  \"A web server is designed to deliver content and execute scripts or\napplications on the request of a client or user. Containing user requests to\nfiles in the directory tree of the hosted web application and limiting the\nexecution of scripts and applications guarantees that the user is not accessing\ninformation protected outside the application's realm.\n\n    The web server must also prohibit users from jumping outside the hosted\napplication directory tree through access to the user's home directory,\nsymbolic links or shortcuts, or through search paths for missing files.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Verify there is a single \\\"Require\\\" directive with the value of \\\"all\ndenied\\\".\n\n    Verify there are no \\\"Allow\\\" or \\\"Deny\\\" directives in the root\n<Directory> element.\n\n    The following may be useful in extracting root directory elements from the\nApache configuration for auditing:\n\n    # perl -ne 'print if /^ *<Directory *\\\\//i .. /<\\\\/Directory/i'\n$APACHE_PREFIX/conf/httpd.conf\n\n    If there are \\\"Allow\\\" or \\\"Deny\\\" directives in the root <Directory>\nelement, this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Set the root directory directive as follows:\n\n    <Directory>\n    ...\n    Require all denied\n    ...\n    </Directory>\n\n    Remove any \\\"Deny\\\" and \\\"Allow\\\" directives from the root <Directory>\nelement.\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000141-WSR-000087'\n  tag gid: 'V-92779'\n  tag rid: 'SV-102867r1_rule'\n  tag stig_id: 'AS24-U2-000350'\n  tag fix_id: 'F-99023r1_fix'\n  tag cci: ['CCI-000381']\n  tag nist: ['CM-7 a']\n\n  config_path = input('config_path')\n  httpd = apache_conf(config_path)\n  root_directory = []\n  root_directory.push(command(\"grep -n '^<Directory />' #{httpd}\").stdout.strip)\n  root_directory.push(command(\"grep -n -m1 '^</Directory>' #{httpd}\").stdout.strip)\n\n  line_numbers = root_directory ? root_directory.map { |tag| tag.split(':')[0] } : nil\n\n  chunk = command(\"sed -n '#{line_numbers[0]},#{line_numbers[1]}p' #{httpd}\").stdout\n\n  describe chunk do\n    it { should include 'Require all denied' }\n    it { should_not cmp /Allow / }\n    it { should_not cmp /Deny / }\n  end\nend\n","source_location":{"ref":"./controls/V-92779.rb","line":1},"id":"V-92779"},{"title":"The Apache web server must be configured to use a specified IP address\nand port.","desc":"The web server must be configured to listen on a specified IP address\nand port. Without specifying an IP address and port for the web server to use,\nthe web server will listen on all IP addresses available to the hosting server.\nIf the web server has multiple IP addresses, i.e., a management IP address, the\nweb server will also accept connections on the management IP address.\n\n    Accessing the hosted application through an IP address normally used for\nnon-application functions opens the possibility of user access to resources,\nutilities, files, ports, and protocols that are protected on the desired\napplication IP address.","descriptions":{"default":"The web server must be configured to listen on a specified IP address\nand port. Without specifying an IP address and port for the web server to use,\nthe web server will listen on all IP addresses available to the hosting server.\nIf the web server has multiple IP addresses, i.e., a management IP address, the\nweb server will also accept connections on the management IP address.\n\n    Accessing the hosted application through an IP address normally used for\nnon-application functions opens the possibility of user access to resources,\nutilities, files, ports, and protocols that are protected on the desired\napplication IP address.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Verify that for each \"VirtualHost\" directive, there is an IP address and\nport.\n\n    If there is not, this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Set each \"VirtualHost\" directive to listen to on a specific IP address\nand port."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000142-WSR-000089","gid":"V-92781","rid":"SV-102869r1_rule","stig_id":"AS24-U2-000360","fix_id":"F-99025r1_fix","cci":["CCI-000382"],"nist":["CM-7 b"]},"code":"control 'V-92781' do\n  title \"The Apache web server must be configured to use a specified IP address\nand port.\"\n  desc  \"The web server must be configured to listen on a specified IP address\nand port. Without specifying an IP address and port for the web server to use,\nthe web server will listen on all IP addresses available to the hosting server.\nIf the web server has multiple IP addresses, i.e., a management IP address, the\nweb server will also accept connections on the management IP address.\n\n    Accessing the hosted application through an IP address normally used for\nnon-application functions opens the possibility of user access to resources,\nutilities, files, ports, and protocols that are protected on the desired\napplication IP address.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Verify that for each \\\"VirtualHost\\\" directive, there is an IP address and\nport.\n\n    If there is not, this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Set each \\\"VirtualHost\\\" directive to listen to on a specific IP address\nand port.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000142-WSR-000089'\n  tag gid: 'V-92781'\n  tag rid: 'SV-102869r1_rule'\n  tag stig_id: 'AS24-U2-000360'\n  tag fix_id: 'F-99025r1_fix'\n  tag cci: ['CCI-000382']\n  tag nist: ['CM-7 b']\n\n  config_path = input('config_path')\n  virtual_host = apache_conf(config_path).params('<VirtualHost')\n\n  if !virtual_host.nil?\n    virtual_host.each do |address|\n      describe address do\n        it { should match /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]):[0-9]+>$/ }\n      end\n    end\n  else\n    describe 'The Apache web server must be configured to use a specified IP address and port.' do\n      skip 'Could not find the VirtualHost directive defined in Apache config file. This check has failed.'\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92781.rb","line":1},"id":"V-92781"},{"title":"The Apache web server must perform RFC 5280-compliant certification\npath validation.","desc":"A certificate's certification path is the path from the end entity\ncertificate to a trusted root certification authority (CA). Certification path\nvalidation is necessary for a relying party to make an informed decision\nregarding acceptance of an end entity certificate. Certification path\nvalidation includes checks such as certificate issuer trust, time validity, and\nrevocation status for each certificate in the certification path. Revocation\nstatus information for CA and subject certificates in a certification path is\ncommonly provided via certificate revocation lists (CRLs) or online certificate\nstatus protocol (OCSP) responses.","descriptions":{"default":"A certificate's certification path is the path from the end entity\ncertificate to a trusted root certification authority (CA). Certification path\nvalidation is necessary for a relying party to make an informed decision\nregarding acceptance of an end entity certificate. Certification path\nvalidation includes checks such as certificate issuer trust, time validity, and\nrevocation status for each certificate in the certification path. Revocation\nstatus information for CA and subject certificates in a certification path is\ncommonly provided via certificate revocation lists (CRLs) or online certificate\nstatus protocol (OCSP) responses.","rationale":"","check":"In a command line, run \"httpd -M | grep -i ssl_module\".\n\n    If the \"ssl_module\" is not enabled, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the \"ssl.conf\"\nfile:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n\n    Review <'HTTPD_ROOT'>/conf.d/ssl.conf\n\n    Verify \"SSLVerifyClient\" is set to \"require\":\n\n    SSLVerifyClient require\n\n    Verify \"SSLVerifyDepth\" is set to a number greater than \"0\":\n\n    SSLVerifyDepth 1\n\n    If \"SSLVerifyClient\" is not set to \"require\" or \"SSLVerifyDepth\" is\nnot set to a number greater than \"0\", this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the \"ssl.conf\"\nfile:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n\n    Edit <'HTTPD_ROOT'>/conf.d/ssl.conf\n\n    Set \"SSLVerifyClient\" to \"require\".\n\n    Set \"SSLVerifyDepth\" to \"1\".\n\n    SSLVerifyDepth 1\n\n    For more information:\nhttps://httpd.apache.org/docs/current/mod/ssl_module.html"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000175-WSR-000095","gid":"V-92785","rid":"SV-102873r1_rule","stig_id":"AS24-U2-000380","fix_id":"F-99029r1_fix","cci":["CCI-000185"],"nist":["IA-5 (2) (a)"]},"code":"control 'V-92785' do\n  title \"The Apache web server must perform RFC 5280-compliant certification\npath validation.\"\n  desc  \"A certificate's certification path is the path from the end entity\ncertificate to a trusted root certification authority (CA). Certification path\nvalidation is necessary for a relying party to make an informed decision\nregarding acceptance of an end entity certificate. Certification path\nvalidation includes checks such as certificate issuer trust, time validity, and\nrevocation status for each certificate in the certification path. Revocation\nstatus information for CA and subject certificates in a certification path is\ncommonly provided via certificate revocation lists (CRLs) or online certificate\nstatus protocol (OCSP) responses.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i ssl_module\\\".\n\n    If the \\\"ssl_module\\\" is not enabled, this is a finding.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the \\\"ssl.conf\\\"\nfile:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n\n    Review <'HTTPD_ROOT'>/conf.d/ssl.conf\n\n    Verify \\\"SSLVerifyClient\\\" is set to \\\"require\\\":\n\n    SSLVerifyClient require\n\n    Verify \\\"SSLVerifyDepth\\\" is set to a number greater than \\\"0\\\":\n\n    SSLVerifyDepth 1\n\n    If \\\"SSLVerifyClient\\\" is not set to \\\"require\\\" or \\\"SSLVerifyDepth\\\" is\nnot set to a number greater than \\\"0\\\", this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the \\\"ssl.conf\\\"\nfile:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n\n    Edit <'HTTPD_ROOT'>/conf.d/ssl.conf\n\n    Set \\\"SSLVerifyClient\\\" to \\\"require\\\".\n\n    Set \\\"SSLVerifyDepth\\\" to \\\"1\\\".\n\n    SSLVerifyDepth 1\n\n    For more information:\nhttps://httpd.apache.org/docs/current/mod/ssl_module.html\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000175-WSR-000095'\n  tag gid: 'V-92785'\n  tag rid: 'SV-102873r1_rule'\n  tag stig_id: 'AS24-U2-000380'\n  tag fix_id: 'F-99029r1_fix'\n  tag cci: ['CCI-000185']\n  tag nist: ['IA-5 (2) (a)']\n\n  config_path = input('config_path')\n  ssl_module = command('httpd -M | grep -i ssl_module').stdout\n\n  describe ssl_module do\n    it { should include 'ssl_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('SSLVerifyClient') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SSLVerifyClient.nil?\n    apache_conf(config_path).SSLVerifyClient.each do |value|\n      describe 'SSLVerifyClient should be set to require' do\n        subject { value }\n        it { should cmp 'require' }\n      end\n    end\n  end\n\n  describe apache_conf(config_path) do\n    its('SSLVerifyDepth') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SSLVerifyDepth.nil?\n    apache_conf(config_path).SSLVerifyDepth.each do |value|\n      describe 'SSLVerifyDepth should be set to 1' do\n        subject { value }\n        it { should cmp > 0 }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92785.rb","line":1},"id":"V-92785"},{"title":"Only authenticated system administrators or the designated PKI Sponsor\nfor the Apache web server must have access to the Apache web servers private\nkey.","desc":"The web server's private key is used to prove the identity of the\nserver to clients and securely exchange the shared secret key used to encrypt\ncommunications between the web server and clients.\n\n    By gaining access to the private key, an attacker can pretend to be an\nauthorized server and decrypt the SSL traffic between a client and the web\nserver.","descriptions":{"default":"The web server's private key is used to prove the identity of the\nserver to clients and securely exchange the shared secret key used to encrypt\ncommunications between the web server and clients.\n\n    By gaining access to the private key, an attacker can pretend to be an\nauthorized server and decrypt the SSL traffic between a client and the web\nserver.","rationale":"","check":"In a command line, run \"httpd -M | grep -i ssl_module\".\n\n    If the \"ssl_module\" is not enabled, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Review the private key path in the \"SSLCertificateFile\" directive. Verify\nonly authenticated system administrators and the designated PKI Sponsor for the\nweb server can access the web server private key.\n\n    If the private key is accessible by unauthenticated or unauthorized users,\nthis is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Based on the \"SSLCertificateFile\" directive path, configure the Apache\nweb server to ensure only authenticated and authorized users can access the web\nserver's private key."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000176-WSR-000096","gid":"V-92787","rid":"SV-102875r1_rule","stig_id":"AS24-U2-000390","fix_id":"F-99031r1_fix","cci":["CCI-000186"],"nist":["IA-5 (2) (b)"]},"code":"control 'V-92787' do\n  title \"Only authenticated system administrators or the designated PKI Sponsor\nfor the Apache web server must have access to the Apache web servers private\nkey.\"\n  desc  \"The web server's private key is used to prove the identity of the\nserver to clients and securely exchange the shared secret key used to encrypt\ncommunications between the web server and clients.\n\n    By gaining access to the private key, an attacker can pretend to be an\nauthorized server and decrypt the SSL traffic between a client and the web\nserver.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i ssl_module\\\".\n\n    If the \\\"ssl_module\\\" is not enabled, this is a finding.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Review the private key path in the \\\"SSLCertificateFile\\\" directive. Verify\nonly authenticated system administrators and the designated PKI Sponsor for the\nweb server can access the web server private key.\n\n    If the private key is accessible by unauthenticated or unauthorized users,\nthis is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Based on the \\\"SSLCertificateFile\\\" directive path, configure the Apache\nweb server to ensure only authenticated and authorized users can access the web\nserver's private key.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000176-WSR-000096'\n  tag gid: 'V-92787'\n  tag rid: 'SV-102875r1_rule'\n  tag stig_id: 'AS24-U2-000390'\n  tag fix_id: 'F-99031r1_fix'\n  tag cci: ['CCI-000186']\n  tag nist: ['IA-5 (2) (b)']\n\n  config_path = input('config_path')\n  ssl_module = command('httpd -M | grep -i ssl_module').stdout\n\n  describe ssl_module do\n    it { should include 'ssl_module' }\n  end\n\n  describe SSLCertificateFile\n  describe apache_conf(config_path) do\n    its('SSLCertificateFile') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SSLCertificateFile.nil?\n    apache_conf(config_path).SSLCertificateFile.each do |value|\n      describe 'SSLCertificateFile path should only be accessible by authorized users' do\n        subject { file(value) }\n        its('owner') { should be_in input('server_admins') }\n        its('group') { should be_in input('server_admin_groups') }\n        its('mode') { should cmp '0400' }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92787.rb","line":1},"id":"V-92787"},{"title":"Cookies exchanged between the Apache web server and client, such as\nsession cookies, must have security settings that disallow cookie access\noutside the originating Apache web server and hosted application.","desc":"Cookies are used to exchange data between the web server and the\nclient. Cookies, such as a session cookie, may contain session information and\nuser credentials used to maintain a persistent connection between the user and\nthe hosted application since HTTP/HTTPS is a stateless protocol.\n\n    When the cookie parameters are not set properly (i.e., domain and path\nparameters), cookies can be shared within hosted applications residing on the\nsame web server or to applications hosted on different web servers residing on\nthe same domain.","descriptions":{"default":"Cookies are used to exchange data between the web server and the\nclient. Cookies, such as a session cookie, may contain session information and\nuser credentials used to maintain a persistent connection between the user and\nthe hosted application since HTTP/HTTPS is a stateless protocol.\n\n    When the cookie parameters are not set properly (i.e., domain and path\nparameters), cookies can be shared within hosted applications residing on the\nsame web server or to applications hosted on different web servers residing on\nthe same domain.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"Header\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Header\"\n\n    If \"HttpOnly\" \"secure\" is not configured, this is a finding.\n\n    \"Header always edit Set-Cookie ^(.*)$ $1;HttpOnly;secure\"\n\n    Review the code. If, when creating cookies, the following is not occurring,\nthis is a finding:\n\n    function setCookie() { document.cookie = \"ALEPH_SESSION_ID = $SESS; path =\n/; secure\"; }","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Add or configure the following line:\n\n    \"Header always edit Set-Cookie ^(.*)$ $1;HttpOnly;secure\"\n\n    Add the \"secure\" attribute to the JavaScript set cookie in any\napplication code:\n\n    function setCookie() { document.cookie = \"ALEPH_SESSION_ID = $SESS; path =\n/; secure\"; }\n\n    HttpOnly cannot be used since by definition this is a cookie set by\nJavaScript.\n\n    Restart www_server and Apache."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000223-WSR-000011","gid":"V-92795","rid":"SV-102883r1_rule","stig_id":"AS24-U2-000470","fix_id":"F-99039r1_fix","cci":["CCI-001664"],"nist":["SC-23 (3)"]},"code":"control 'V-92795' do\n  title \"Cookies exchanged between the Apache web server and client, such as\nsession cookies, must have security settings that disallow cookie access\noutside the originating Apache web server and hosted application.\"\n  desc  \"Cookies are used to exchange data between the web server and the\nclient. Cookies, such as a session cookie, may contain session information and\nuser credentials used to maintain a persistent connection between the user and\nthe hosted application since HTTP/HTTPS is a stateless protocol.\n\n    When the cookie parameters are not set properly (i.e., domain and path\nparameters), cookies can be shared within hosted applications residing on the\nsame web server or to applications hosted on different web servers residing on\nthe same domain.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the \\\"Header\\\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"Header\\\"\n\n    If \\\"HttpOnly\\\" \\\"secure\\\" is not configured, this is a finding.\n\n    \\\"Header always edit Set-Cookie ^(.*)$ $1;HttpOnly;secure\\\"\n\n    Review the code. If, when creating cookies, the following is not occurring,\nthis is a finding:\n\n    function setCookie() { document.cookie = \\\"ALEPH_SESSION_ID = $SESS; path =\n/; secure\\\"; }\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Add or configure the following line:\n\n    \\\"Header always edit Set-Cookie ^(.*)$ $1;HttpOnly;secure\\\"\n\n    Add the \\\"secure\\\" attribute to the JavaScript set cookie in any\napplication code:\n\n    function setCookie() { document.cookie = \\\"ALEPH_SESSION_ID = $SESS; path =\n/; secure\\\"; }\n\n    HttpOnly cannot be used since by definition this is a cookie set by\nJavaScript.\n\n    Restart www_server and Apache.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000223-WSR-000011'\n  tag gid: 'V-92795'\n  tag rid: 'SV-102883r1_rule'\n  tag stig_id: 'AS24-U2-000470'\n  tag fix_id: 'F-99039r1_fix'\n  tag cci: ['CCI-001664']\n  tag nist: ['SC-23 (3)']\n\n  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('Header') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).Header.nil?\n    apache_conf(config_path).Header.each do |value|\n      describe 'Header should set cookie parameters' do\n        subject { value }\n        it { should cmp 'always edit Set-Cookie ^(.*)$ $1;HttpOnly;secure' }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92795.rb","line":1},"id":"V-92795"},{"title":"The Apache web server must augment re-creation to a stable and known\nbaseline.","desc":"Making certain that the web server has not been updated by an\nunauthorized user is always a concern. Adding patches, functions, and modules\nthat are untested and not part of the baseline opens the possibility for\nsecurity risks. The web server must offer, and not hinder, a method that allows\nfor the quick and easy reinstallation of a verified and patched baseline to\nguarantee the production web server is up-to-date and has not been modified to\nadd functionality or expose security risks.\n\n    When the web server does not offer a method to roll back to a clean\nbaseline, external methods, such as a baseline snapshot or virtualizing the web\nserver, can be used.","descriptions":{"default":"Making certain that the web server has not been updated by an\nunauthorized user is always a concern. Adding patches, functions, and modules\nthat are untested and not part of the baseline opens the possibility for\nsecurity risks. The web server must offer, and not hinder, a method that allows\nfor the quick and easy reinstallation of a verified and patched baseline to\nguarantee the production web server is up-to-date and has not been modified to\nadd functionality or expose security risks.\n\n    When the web server does not offer a method to roll back to a clean\nbaseline, external methods, such as a baseline snapshot or virtualizing the web\nserver, can be used.","rationale":"","check":"Interview the System Administrator for the Apache web server.\n\n    Ask for documentation on the disaster recovery methods tested and planned\nfor the Apache web server in the event of the necessity for rollback.\n\n    If documentation for a disaster recovery has not been established, this is\na finding.","fix":"Prepare documentation for disaster recovery methods for the Apache web\nserver in the event of the necessity for rollback.\n\n    Document and test the disaster recovery methods designed."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000225-WSR-000074","gid":"V-92797","rid":"SV-102885r1_rule","stig_id":"AS24-U2-000540","fix_id":"F-99041r1_fix","cci":["CCI-001190"],"nist":["SC-24"]},"code":"control 'V-92797' do\n  title \"The Apache web server must augment re-creation to a stable and known\nbaseline.\"\n  desc  \"Making certain that the web server has not been updated by an\nunauthorized user is always a concern. Adding patches, functions, and modules\nthat are untested and not part of the baseline opens the possibility for\nsecurity risks. The web server must offer, and not hinder, a method that allows\nfor the quick and easy reinstallation of a verified and patched baseline to\nguarantee the production web server is up-to-date and has not been modified to\nadd functionality or expose security risks.\n\n    When the web server does not offer a method to roll back to a clean\nbaseline, external methods, such as a baseline snapshot or virtualizing the web\nserver, can be used.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Interview the System Administrator for the Apache web server.\n\n    Ask for documentation on the disaster recovery methods tested and planned\nfor the Apache web server in the event of the necessity for rollback.\n\n    If documentation for a disaster recovery has not been established, this is\na finding.\n  \"\n  desc 'fix', \"\n    Prepare documentation for disaster recovery methods for the Apache web\nserver in the event of the necessity for rollback.\n\n    Document and test the disaster recovery methods designed.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000225-WSR-000074'\n  tag gid: 'V-92797'\n  tag rid: 'SV-102885r1_rule'\n  tag stig_id: 'AS24-U2-000540'\n  tag fix_id: 'F-99041r1_fix'\n  tag cci: ['CCI-001190']\n  tag nist: ['SC-24']\n\n  describe 'The Apache web server must augment re-creation to a stable and known baseline.' do\n    skip \"Interview the System Administrator for the Apache web server.\n      Ask for documentation on the disaster recovery methods tested and planned for the Apache web server in the event of the necessity for rollback.\n      If documentation for a disaster recovery has not been established, this is a finding.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92797.rb","line":1},"id":"V-92797"},{"title":"The Apache web server document directory must be in a separate\npartition from the Apache web servers system files.","desc":"A web server is used to deliver content on the request of a client.\nThe content delivered to a client must be controlled, allowing only hosted\napplication files to be accessed and delivered. To allow a client access to\nsystem files of any type is a major security risk that is entirely avoidable.\nObtaining such access is the goal of directory traversal and URL manipulation\nvulnerabilities. To facilitate such access by misconfiguring the web document\n(home) directory is a serious error. In addition, having the path on the same\ndrive as the system folder compounds potential attacks such as drive space\nexhaustion.","descriptions":{"default":"A web server is used to deliver content on the request of a client.\nThe content delivered to a client must be controlled, allowing only hosted\napplication files to be accessed and delivered. To allow a client access to\nsystem files of any type is a major security risk that is entirely avoidable.\nObtaining such access is the goal of directory traversal and URL manipulation\nvulnerabilities. To facilitate such access by misconfiguring the web document\n(home) directory is a serious error. In addition, having the path on the same\ndrive as the system folder compounds potential attacks such as drive space\nexhaustion.","rationale":"","check":"Run the following command:\n\n    grep \"DocumentRoot\"<'INSTALL PATH'>/conf/httpd.conf\n\n    Note each location following the \"DocumentRoot\" string. This is the\nconfigured path to the document root directory(s).\n\n    Use the command df -k to view each document root's partition setup.\n\n    Compare that against the results for the operating system file systems and\nagainst the partition for the web server system files, which is the result of\nthe command:\n\n    df -k <'INSTALL PATH'>/bin\n\n    If the document root path is on the same partition as the web server system\nfiles or the operating system file systems, this is a finding.","fix":"Move the web document (normally \"htdocs\") directory to a\nseparate partition other than the operating system root partition and the web\nserver’s system files."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000233-WSR-000146","gid":"V-92799","rid":"SV-102887r1_rule","stig_id":"AS24-U2-000580","fix_id":"F-99043r1_fix","cci":["CCI-001084"],"nist":["SC-3"]},"code":"control 'V-92799' do\n  title \"The Apache web server document directory must be in a separate\npartition from the Apache web servers system files.\"\n  desc  \"A web server is used to deliver content on the request of a client.\nThe content delivered to a client must be controlled, allowing only hosted\napplication files to be accessed and delivered. To allow a client access to\nsystem files of any type is a major security risk that is entirely avoidable.\nObtaining such access is the goal of directory traversal and URL manipulation\nvulnerabilities. To facilitate such access by misconfiguring the web document\n(home) directory is a serious error. In addition, having the path on the same\ndrive as the system folder compounds potential attacks such as drive space\nexhaustion.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Run the following command:\n\n    grep \\\"DocumentRoot\\\"<'INSTALL PATH'>/conf/httpd.conf\n\n    Note each location following the \\\"DocumentRoot\\\" string. This is the\nconfigured path to the document root directory(s).\n\n    Use the command df -k to view each document root's partition setup.\n\n    Compare that against the results for the operating system file systems and\nagainst the partition for the web server system files, which is the result of\nthe command:\n\n    df -k <'INSTALL PATH'>/bin\n\n    If the document root path is on the same partition as the web server system\nfiles or the operating system file systems, this is a finding.\n  \"\n  desc 'fix', \"Move the web document (normally \\\"htdocs\\\") directory to a\nseparate partition other than the operating system root partition and the web\nserver’s system files.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000233-WSR-000146'\n  tag gid: 'V-92799'\n  tag rid: 'SV-102887r1_rule'\n  tag stig_id: 'AS24-U2-000580'\n  tag fix_id: 'F-99043r1_fix'\n  tag cci: ['CCI-001084']\n  tag nist: ['SC-3']\n\n  config_path = input('config_path')\n  doc_mounts = []\n  document_root = apache_conf(config_path).params('DocumentRoot')\n\n  document_root.each do |docs|\n    doc_mounts.push(command(\"df -k #{docs}\").stdout.strip.split(' ')[-1])\n  end\n\n  describe 'Apache web server document directory must be in a separate partition from the Apache web servers system files.' do\n    skip \"The document directories were found on #{doc_mounts.join(', ')}.\n      If the document root path is on the same partition as the web server system files or the operating system file systems, this is a finding.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92799.rb","line":1},"id":"V-92799"},{"title":"The Apache web server must be tuned to handle the operational\nrequirements of the hosted application.","desc":"A denial of service (DoS) can occur when the Apache web server is so\noverwhelmed that it can no longer respond to additional requests. A web server\nnot properly tuned may become overwhelmed and cause a DoS condition even with\nexpected traffic from users. To avoid a DoS, the Apache web server must be\ntuned to handle the expected traffic for the hosted applications.","descriptions":{"default":"A denial of service (DoS) can occur when the Apache web server is so\noverwhelmed that it can no longer respond to additional requests. A web server\nnot properly tuned may become overwhelmed and cause a DoS condition even with\nexpected traffic from users. To avoid a DoS, the Apache web server must be\ntuned to handle the expected traffic for the hosted applications.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Verify that the \"Timeout\" directive is specified to have a value of\n\"10\" seconds or less.\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Timeout\"\n\n    If the \"Timeout\" directive is not configured or is set for more than\n\"10\" seconds, this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Add or modify the \"Timeout\" directive in the Apache configuration to have\na value of \"10\" seconds or less.\n\n    \"Timeout 10\""},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000246-WSR-000149","satisfies":["SRG-APP-000246-WSR-000149","SRG-APP-000435-WSR-000148"],"gid":"V-92801","rid":"SV-102889r1_rule","stig_id":"AS24-U2-000590","fix_id":"F-99045r1_fix","cci":["CCI-001094","CCI-002385"],"nist":["SC-5 (1)","SC-5"]},"code":"control 'V-92801' do\n  title \"The Apache web server must be tuned to handle the operational\nrequirements of the hosted application.\"\n  desc  \"A denial of service (DoS) can occur when the Apache web server is so\noverwhelmed that it can no longer respond to additional requests. A web server\nnot properly tuned may become overwhelmed and cause a DoS condition even with\nexpected traffic from users. To avoid a DoS, the Apache web server must be\ntuned to handle the expected traffic for the hosted applications.\n\n\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Verify that the \\\"Timeout\\\" directive is specified to have a value of\n\\\"10\\\" seconds or less.\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"Timeout\\\"\n\n    If the \\\"Timeout\\\" directive is not configured or is set for more than\n\\\"10\\\" seconds, this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Add or modify the \\\"Timeout\\\" directive in the Apache configuration to have\na value of \\\"10\\\" seconds or less.\n\n    \\\"Timeout 10\\\"\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000246-WSR-000149'\n  tag satisfies: %w(SRG-APP-000246-WSR-000149 SRG-APP-000435-WSR-000148)\n  tag gid: 'V-92801'\n  tag rid: 'SV-102889r1_rule'\n  tag stig_id: 'AS24-U2-000590'\n  tag fix_id: 'F-99045r1_fix'\n  tag cci: %w(CCI-001094 CCI-002385)\n  tag nist: ['SC-5 (1)', 'SC-5']\n\n  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('Timeout') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).Timeout.nil?\n    apache_conf(config_path).Timeout.each do |value|\n      describe 'Timeout value definition' do\n        subject { value }\n        it { should cmp <= 10 }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92801.rb","line":1},"id":"V-92801"},{"title":"The Apache web server must display a default hosted application web\npage, not a directory listing, when a requested web page cannot be found.","desc":"The goal is to completely control the web user's experience in\nnavigating any portion of the web document root directories. Ensuring all web\ncontent directories have at least the equivalent of an index.html file is a\nsignificant factor to accomplish this end.\n\n    Enumeration techniques, such as URL parameter manipulation, rely upon being\nable to obtain information about the Apache web server's directory structure by\nlocating directories without default pages. In the scenario, the Apache web\nserver will display to the user a listing of the files in the directory being\naccessed. By having a default hosted application web page, the anonymous web\nuser will not obtain directory browsing information or an error message that\nreveals the server type and version.","descriptions":{"default":"The goal is to completely control the web user's experience in\nnavigating any portion of the web document root directories. Ensuring all web\ncontent directories have at least the equivalent of an index.html file is a\nsignificant factor to accomplish this end.\n\n    Enumeration techniques, such as URL parameter manipulation, rely upon being\nable to obtain information about the Apache web server's directory structure by\nlocating directories without default pages. In the scenario, the Apache web\nserver will display to the user a listing of the files in the directory being\naccessed. By having a default hosted application web page, the anonymous web\nuser will not obtain directory browsing information or an error message that\nreveals the server type and version.","rationale":"","check":"View the \"DocumentRoot\" value by entering the following command:\n\n    awk '{print $1,$2,$3}' <'INSTALL PATH'>/conf/httpd.conf|grep -i\nDocumentRoot|grep -v '^#'\n\n    Note each location following the \"DocumentRoot\" string. This is the\nconfigured path(s) to the document root directory(s).\n\n    To view a list of the directories and subdirectories and the file\n\"index.html\", from each stated \"DocumentRoot\" location enter the following\ncommands:\n\n    find . -type d\n    find . -type f -name index.html\n\n    Review the results for each document root directory and its subdirectories.\n\n    If a directory does not contain an \"index.html\" or equivalent default\ndocument, this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Add a default document to the applicable directories."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000266-WSR-000142","gid":"V-92803","rid":"SV-102891r1_rule","stig_id":"AS24-U2-000620","fix_id":"F-99047r1_fix","cci":["CCI-001312"],"nist":["SI-11 a"]},"code":"control 'V-92803' do\n  title \"The Apache web server must display a default hosted application web\npage, not a directory listing, when a requested web page cannot be found.\"\n  desc  \"The goal is to completely control the web user's experience in\nnavigating any portion of the web document root directories. Ensuring all web\ncontent directories have at least the equivalent of an index.html file is a\nsignificant factor to accomplish this end.\n\n    Enumeration techniques, such as URL parameter manipulation, rely upon being\nable to obtain information about the Apache web server's directory structure by\nlocating directories without default pages. In the scenario, the Apache web\nserver will display to the user a listing of the files in the directory being\naccessed. By having a default hosted application web page, the anonymous web\nuser will not obtain directory browsing information or an error message that\nreveals the server type and version.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    View the \\\"DocumentRoot\\\" value by entering the following command:\n\n    awk '{print $1,$2,$3}' <'INSTALL PATH'>/conf/httpd.conf|grep -i\nDocumentRoot|grep -v '^#'\n\n    Note each location following the \\\"DocumentRoot\\\" string. This is the\nconfigured path(s) to the document root directory(s).\n\n    To view a list of the directories and subdirectories and the file\n\\\"index.html\\\", from each stated \\\"DocumentRoot\\\" location enter the following\ncommands:\n\n    find . -type d\n    find . -type f -name index.html\n\n    Review the results for each document root directory and its subdirectories.\n\n    If a directory does not contain an \\\"index.html\\\" or equivalent default\ndocument, this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Add a default document to the applicable directories.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000266-WSR-000142'\n  tag gid: 'V-92803'\n  tag rid: 'SV-102891r1_rule'\n  tag stig_id: 'AS24-U2-000620'\n  tag fix_id: 'F-99047r1_fix'\n  tag cci: ['CCI-001312']\n  tag nist: ['SI-11 a']\n\n  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('DocumentRoot') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).DocumentRoot.nil?\n    apache_conf(config_path).DocumentRoot.each do |project_dir|\n      describe file(\"#{project_dir}/index.html\") do\n        it { should exist }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92803.rb","line":1},"id":"V-92803"},{"title":"Warning and error messages displayed to clients must be modified to\nminimize the identity of the Apache web server, patches, loaded modules, and\ndirectory paths.","desc":"Information needed by an attacker to begin looking for possible\nvulnerabilities in an Apache web server includes any information about the\nApache web server, backend systems being accessed, and plug-ins or modules\nbeing used.\n\n    Apache web servers will often display error messages to client users,\ndisplaying enough information to aid in the debugging of the error. The\ninformation given back in error messages may display the Apache web server\ntype, version, patches installed, plug-ins and modules installed, type of code\nbeing used by the hosted application, and any backends being used for data\nstorage.\n\n    This information could be used by an attacker to blueprint what type of\nattacks might be successful. The information given to users must be minimized\nto not aid in the blueprinting of the Apache web server.","descriptions":{"default":"Information needed by an attacker to begin looking for possible\nvulnerabilities in an Apache web server includes any information about the\nApache web server, backend systems being accessed, and plug-ins or modules\nbeing used.\n\n    Apache web servers will often display error messages to client users,\ndisplaying enough information to aid in the debugging of the error. The\ninformation given back in error messages may display the Apache web server\ntype, version, patches installed, plug-ins and modules installed, type of code\nbeing used by the hosted application, and any backends being used for data\nstorage.\n\n    This information could be used by an attacker to blueprint what type of\nattacks might be successful. The information given to users must be minimized\nto not aid in the blueprinting of the Apache web server.","rationale":"","check":"In a command line, run \"httpd -M | grep -i ssl_module\".\n\n    If the \"ssl_module\" is not enabled, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    If the \"ErrorDocument\" directive is not being used, this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Use the \"ErrorDocument\" directive to enable custom error pages.\n\n    ErrorDocument 500 \"Sorry, our script crashed. Oh dear\"\n    ErrorDocument 500 /cgi-bin/crash-recover\n    ErrorDocument 500 http://error.example.com/server_error.html\n    ErrorDocument 404 /errors/not_found.html\n    ErrorDocument 401 /subscription/how_to_subscribe.html\n\n    The syntax of the ErrorDocument directive is:\n\n    ErrorDocument <3-digit-code> <action>\n\n    Additional Information:\n\n    https://httpd.apache.org/docs/2.4/custom-error.html"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000266-WSR-000159","gid":"V-92805","rid":"SV-102893r1_rule","stig_id":"AS24-U2-000630","fix_id":"F-99049r1_fix","cci":["CCI-001312"],"nist":["SI-11 a"]},"code":"control 'V-92805' do\n  title \"Warning and error messages displayed to clients must be modified to\nminimize the identity of the Apache web server, patches, loaded modules, and\ndirectory paths.\"\n  desc  \"Information needed by an attacker to begin looking for possible\nvulnerabilities in an Apache web server includes any information about the\nApache web server, backend systems being accessed, and plug-ins or modules\nbeing used.\n\n    Apache web servers will often display error messages to client users,\ndisplaying enough information to aid in the debugging of the error. The\ninformation given back in error messages may display the Apache web server\ntype, version, patches installed, plug-ins and modules installed, type of code\nbeing used by the hosted application, and any backends being used for data\nstorage.\n\n    This information could be used by an attacker to blueprint what type of\nattacks might be successful. The information given to users must be minimized\nto not aid in the blueprinting of the Apache web server.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i ssl_module\\\".\n\n    If the \\\"ssl_module\\\" is not enabled, this is a finding.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    If the \\\"ErrorDocument\\\" directive is not being used, this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Use the \\\"ErrorDocument\\\" directive to enable custom error pages.\n\n    ErrorDocument 500 \\\"Sorry, our script crashed. Oh dear\\\"\n    ErrorDocument 500 /cgi-bin/crash-recover\n    ErrorDocument 500 http://error.example.com/server_error.html\n    ErrorDocument 404 /errors/not_found.html\n    ErrorDocument 401 /subscription/how_to_subscribe.html\n\n    The syntax of the ErrorDocument directive is:\n\n    ErrorDocument <3-digit-code> <action>\n\n    Additional Information:\n\n    https://httpd.apache.org/docs/2.4/custom-error.html\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000266-WSR-000159'\n  tag gid: 'V-92805'\n  tag rid: 'SV-102893r1_rule'\n  tag stig_id: 'AS24-U2-000630'\n  tag fix_id: 'F-99049r1_fix'\n  tag cci: ['CCI-001312']\n  tag nist: ['SI-11 a']\n\n  config_path = input('config_path')\n  describe apache_conf(config_path) do\n    its('ErrorDocument') { should_not be_empty }\n    its('ErrorDocument.to_s') { should match /4[0-9][0-9]/ }\n    its('ErrorDocument.to_s') { should match /5[0-9][0-9]/ }\n  end\nend\n","source_location":{"ref":"./controls/V-92805.rb","line":1},"id":"V-92805"},{"title":"Debugging and trace information used to diagnose the Apache web server\nmust be disabled.","desc":"Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the Apache web\nserver and plug-ins or modules being used. When debugging or trace information\nis enabled in a production web server, information about the web server, such\nas web server type, version, patches installed, plug-ins and modules installed,\ntype of code being used by the hosted application, and any backends being used\nfor data storage, may be displayed. Since this information may be placed in\nlogs and general messages during normal operation of the Apache web server, an\nattacker does not need to cause an error condition to gain access to this\ninformation.","descriptions":{"default":"Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the Apache web\nserver and plug-ins or modules being used. When debugging or trace information\nis enabled in a production web server, information about the web server, such\nas web server type, version, patches installed, plug-ins and modules installed,\ntype of code being used by the hosted application, and any backends being used\nfor data storage, may be displayed. Since this information may be placed in\nlogs and general messages during normal operation of the Apache web server, an\nattacker does not need to cause an error condition to gain access to this\ninformation.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    For any enabled \"TraceEnable\" directives, verify they are part of the\nserver-level configuration (i.e., not nested in a \"Directory\" or \"Location\"\ndirective).\n\n    Also verify that the \"TraceEnable\" directive is set to \"Off\".\n\n    If the \"TraceEnable\" directive is not part of the server-level\nconfiguration and/or is not set to \"Off\", this is a finding.\n\n    If the directive does not exist in the \"conf\" file, this is a finding\nbecause the default value is \"On\".","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Add or set the value of \"TraceEnable\" to \"Off\"."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000266-WSR-000160","gid":"V-92807","rid":"SV-102895r1_rule","stig_id":"AS24-U2-000640","fix_id":"F-99051r1_fix","cci":["CCI-001312"],"nist":["SI-11 a"]},"code":"control 'V-92807' do\n  title \"Debugging and trace information used to diagnose the Apache web server\nmust be disabled.\"\n  desc  \"Information needed by an attacker to begin looking for possible\nvulnerabilities in a web server includes any information about the Apache web\nserver and plug-ins or modules being used. When debugging or trace information\nis enabled in a production web server, information about the web server, such\nas web server type, version, patches installed, plug-ins and modules installed,\ntype of code being used by the hosted application, and any backends being used\nfor data storage, may be displayed. Since this information may be placed in\nlogs and general messages during normal operation of the Apache web server, an\nattacker does not need to cause an error condition to gain access to this\ninformation.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    For any enabled \\\"TraceEnable\\\" directives, verify they are part of the\nserver-level configuration (i.e., not nested in a \\\"Directory\\\" or \\\"Location\\\"\ndirective).\n\n    Also verify that the \\\"TraceEnable\\\" directive is set to \\\"Off\\\".\n\n    If the \\\"TraceEnable\\\" directive is not part of the server-level\nconfiguration and/or is not set to \\\"Off\\\", this is a finding.\n\n    If the directive does not exist in the \\\"conf\\\" file, this is a finding\nbecause the default value is \\\"On\\\".\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Add or set the value of \\\"TraceEnable\\\" to \\\"Off\\\".\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000266-WSR-000160'\n  tag gid: 'V-92807'\n  tag rid: 'SV-102895r1_rule'\n  tag stig_id: 'AS24-U2-000640'\n  tag fix_id: 'F-99051r1_fix'\n  tag cci: ['CCI-001312']\n  tag nist: ['SI-11 a']\n\n  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('TraceEnable') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).TraceEnable.nil?\n    apache_conf(config_path).TraceEnable.each do |value|\n      describe 'TraceEnable value should be off' do\n        subject { value }\n        it { should cmp 'off' }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92807.rb","line":1},"id":"V-92807"},{"title":"The Apache web server must set an absolute timeout for sessions.","desc":"Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after an\nabsolute period of time, the user is forced to reauthenticate, guaranteeing the\nsession is still in use. Enabling an absolute timeout for sessions closes\nsessions that are still active. Examples would be a runaway process accessing\nthe Apache web server or an attacker using a hijacked session to slowly probe\nthe Apache web server.","descriptions":{"default":"Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after an\nabsolute period of time, the user is forced to reauthenticate, guaranteeing the\nsession is still in use. Enabling an absolute timeout for sessions closes\nsessions that are still active. Examples would be a runaway process accessing\nthe Apache web server or an attacker using a hijacked session to slowly probe\nthe Apache web server.","rationale":"","check":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Verify the \"SessionMaxAge\" directive exists and is set to \"600\".\n\n    If the \"SessionMaxAge\" directive does not exist, this is a finding.\n\n    If the \"SessionMaxAge\" directive exists but is not set to \"600\", this\nis a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Add or set the \"SessionMaxAge\" directive to \"600\"."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000295-WSR-000012","gid":"V-92809","rid":"SV-102897r1_rule","stig_id":"AS24-U2-000650","fix_id":"F-99053r1_fix","cci":["CCI-002361"],"nist":["AC-12"]},"code":"control 'V-92809' do\n  title 'The Apache web server must set an absolute timeout for sessions.'\n  desc  \"Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after an\nabsolute period of time, the user is forced to reauthenticate, guaranteeing the\nsession is still in use. Enabling an absolute timeout for sessions closes\nsessions that are still active. Examples would be a runaway process accessing\nthe Apache web server or an attacker using a hijacked session to slowly probe\nthe Apache web server.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Verify the \\\"SessionMaxAge\\\" directive exists and is set to \\\"600\\\".\n\n    If the \\\"SessionMaxAge\\\" directive does not exist, this is a finding.\n\n    If the \\\"SessionMaxAge\\\" directive exists but is not set to \\\"600\\\", this\nis a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Add or set the \\\"SessionMaxAge\\\" directive to \\\"600\\\".\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000295-WSR-000012'\n  tag gid: 'V-92809'\n  tag rid: 'SV-102897r1_rule'\n  tag stig_id: 'AS24-U2-000650'\n  tag fix_id: 'F-99053r1_fix'\n  tag cci: ['CCI-002361']\n  tag nist: ['AC-12']\n\n  config_path = input('config_path')\n\n  describe apache_conf(config_path) do\n    its('SessionMaxAge') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SessionMaxAge.nil?\n    apache_conf(config_path).SessionMaxAge.each do |value|\n      describe 'SessionMaxAge value should be less than or equal to 600' do\n        subject { value }\n        it { should be <= 600 }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92809.rb","line":1},"id":"V-92809"},{"title":"The Apache web server must set an inactive timeout for sessions.","desc":"Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after a\nset period of inactivity, the Apache web server can make certain that those\nsessions that are not closed through the user logging out of an application are\neventually closed.\n\n    Acceptable values are 5 minutes for high-value applications, 10 minutes for\nmedium-value applications, and 20 minutes for low-value applications.","descriptions":{"default":"Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after a\nset period of inactivity, the Apache web server can make certain that those\nsessions that are not closed through the user logging out of an application are\neventually closed.\n\n    Acceptable values are 5 minutes for high-value applications, 10 minutes for\nmedium-value applications, and 20 minutes for low-value applications.","rationale":"","check":"In a command line, run \"httpd -M | grep -i Reqtimeout_module\".\n\nIf the \"Reqtimeout_module\" is not enabled, this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Load the \"Reqtimeout_module\".\n\n    Set the \"RequestReadTimeout\" directive."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000295-WSR-000134","gid":"V-92811","rid":"SV-102899r1_rule","stig_id":"AS24-U2-000660","fix_id":"F-99055r1_fix","cci":["CCI-002361"],"nist":["AC-12"]},"code":"control 'V-92811' do\n  title 'The Apache web server must set an inactive timeout for sessions.'\n  desc  \"Leaving sessions open indefinitely is a major security risk. An\nattacker can easily use an already authenticated session to access the hosted\napplication as the previously authenticated user. By closing sessions after a\nset period of inactivity, the Apache web server can make certain that those\nsessions that are not closed through the user logging out of an application are\neventually closed.\n\n    Acceptable values are 5 minutes for high-value applications, 10 minutes for\nmedium-value applications, and 20 minutes for low-value applications.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i Reqtimeout_module\\\".\n\n    If the \\\"Reqtimeout_module\\\" is not enabled, this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Load the \\\"Reqtimeout_module\\\".\n\n    Set the \\\"RequestReadTimeout\\\" directive.\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000295-WSR-000134'\n  tag gid: 'V-92811'\n  tag rid: 'SV-102899r1_rule'\n  tag stig_id: 'AS24-U2-000660'\n  tag fix_id: 'F-99055r1_fix'\n  tag cci: ['CCI-002361']\n  tag nist: ['AC-12']\n\n  req_timeout_module = command('httpd -M | grep -i reqtimeout_module').stdout\n\n  describe req_timeout_module do\n    it { should include 'reqtimeout_module' }\n  end\nend\n","source_location":{"ref":"./controls/V-92811.rb","line":1},"id":"V-92811"},{"title":"The Apache web server must restrict inbound connections from nonsecure\nzones.","desc":"Remote access to the Apache web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be capable of restricting\naccess from what the DoD defines as nonsecure zones. Nonsecure zones are\ndefined as any IP, subnet, or region that is defined as a threat to the\norganization. The nonsecure zones must be defined for public web servers\nlogically located in a DMZ, as well as private web servers with perimeter\nprotection devices. By restricting access from nonsecure zones, through the\ninternal web server access list, the Apache web server can stop or slow\ndenial-of-service (DoS) attacks on the web server.","descriptions":{"default":"Remote access to the Apache web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be capable of restricting\naccess from what the DoD defines as nonsecure zones. Nonsecure zones are\ndefined as any IP, subnet, or region that is defined as a threat to the\norganization. The nonsecure zones must be defined for public web servers\nlogically located in a DMZ, as well as private web servers with perimeter\nprotection devices. By restricting access from nonsecure zones, through the\ninternal web server access list, the Apache web server can stop or slow\ndenial-of-service (DoS) attacks on the web server.","rationale":"","check":"If external controls such as host-based firewalls are used to restrict this\naccess, this check is Not Applicable.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"RequireAll\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"RequireAll\"\n\n    If \"RequireAll\" is not configured or IP ranges configured to allow are\nnot restrictive enough to prevent connections from nonsecure zones, this is a\nfinding.","fix":"Configure the \"http.conf\" file to include restrictions.\n\nExample:\n\n<RequireAll>\nRequire not ip 192.168.205\nRequire not host phishers.example.com\n</RequireAll>"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000315-WSR-000004","gid":"V-92815","rid":"SV-102903r1_rule","stig_id":"AS24-U2-000680","fix_id":"F-99059r2_fix","cci":["CCI-002314"],"nist":["AC-17 (1)"]},"code":"control 'V-92815' do\n  title \"The Apache web server must restrict inbound connections from nonsecure\nzones.\"\n  desc  \"Remote access to the Apache web server is any access that communicates\nthrough an external, non-organization-controlled network. Remote access can be\nused to access hosted applications or to perform management functions.\n\n    A web server can be accessed remotely and must be capable of restricting\naccess from what the DoD defines as nonsecure zones. Nonsecure zones are\ndefined as any IP, subnet, or region that is defined as a threat to the\norganization. The nonsecure zones must be defined for public web servers\nlogically located in a DMZ, as well as private web servers with perimeter\nprotection devices. By restricting access from nonsecure zones, through the\ninternal web server access list, the Apache web server can stop or slow\ndenial-of-service (DoS) attacks on the web server.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    If external controls such as host-based firewalls are used to restrict this\naccess, this check is Not Applicable.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the \\\"RequireAll\\\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"RequireAll\\\"\n\n    If \\\"RequireAll\\\" is not configured or IP ranges configured to allow are\nnot restrictive enough to prevent connections from nonsecure zones, this is a\nfinding.\n  \"\n  desc 'fix', \"\n    Configure the \\\"http.conf\\\" file to include restrictions.\n\n    Example:\n\n    <RequireAll>\n    Require not ip 192.168.205\n    Require not host phishers.example.com\n    </RequireAll>\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000315-WSR-000004'\n  tag gid: 'V-92815'\n  tag rid: 'SV-102903r1_rule'\n  tag stig_id: 'AS24-U2-000680'\n  tag fix_id: 'F-99059r2_fix'\n  tag cci: ['CCI-002314']\n  tag nist: ['AC-17 (1)']\n\n  firewall = input('host_based_firewall_used')\n  config_path = input('config_path')\n\n  if firewall\n    impact 0.0\n  else\n    impact 0.5\n  end\n\n  describe apache_conf(config_path) do\n    its('RequireAll') { should_not be_nil }\n  end\n\n  require_all = file(config_path).content.scan(%r{^\\s*(<RequireAll[\\s\\S]*?>[\\s\\S]*?</RequireAll>)})\n\n  unless apache_conf(config_path).RequireAll.nil?\n    describe 'If IP ranges for RequireAll directive are not restrictive enough to prevent connections from nonsecure zones, this is a finding.' do\n      skip \"The RequireAll directive is provided below. A manual check is required to verify the IP addresses. \\n #{require_all}\\n\"\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92815.rb","line":1},"id":"V-92815"},{"title":"Non-privileged accounts on the hosting system must only access Apache\nweb server security-relevant information and functions through a distinct\nadministrative account.","desc":"By separating Apache web server security functions from non-privileged\nusers, roles can be developed that can then be used to administer the Apache\nweb server. Forcing users to change from a non-privileged account to a\nprivileged account when operating on the Apache web server or on\nsecurity-relevant information forces users to only operate as a Web Server\nAdministrator when necessary. Operating in this manner allows for better\nlogging of changes and better forensic information and limits accidental\nchanges to the Apache web server.","descriptions":{"default":"By separating Apache web server security functions from non-privileged\nusers, roles can be developed that can then be used to administer the Apache\nweb server. Forcing users to change from a non-privileged account to a\nprivileged account when operating on the Apache web server or on\nsecurity-relevant information forces users to only operate as a Web Server\nAdministrator when necessary. Operating in this manner allows for better\nlogging of changes and better forensic information and limits accidental\nchanges to the Apache web server.","rationale":"","check":"Determine which tool or control file is used to control the configuration\nof the web server.\n\n    If the control of the web server is done via control files, verify who has\nupdate access to them. If tools are being used to configure the web server,\ndetermine who has access to execute the tools.\n\n    If accounts other than the System Administrator, Web Manager, or the Web\nManager designees have access to the web administration tool or control files,\nthis is a finding.","fix":"Restrict access to the web administration tool to only the\nSystem Administrator, Web Manager, or the Web Manager designees."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000340-WSR-000029","gid":"V-92817","rid":"SV-102905r1_rule","stig_id":"AS24-U2-000700","fix_id":"F-99061r1_fix","cci":["CCI-002235"],"nist":["AC-6 (10)"]},"code":"control 'V-92817' do\n  title \"Non-privileged accounts on the hosting system must only access Apache\nweb server security-relevant information and functions through a distinct\nadministrative account.\"\n  desc  \"By separating Apache web server security functions from non-privileged\nusers, roles can be developed that can then be used to administer the Apache\nweb server. Forcing users to change from a non-privileged account to a\nprivileged account when operating on the Apache web server or on\nsecurity-relevant information forces users to only operate as a Web Server\nAdministrator when necessary. Operating in this manner allows for better\nlogging of changes and better forensic information and limits accidental\nchanges to the Apache web server.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    Determine which tool or control file is used to control the configuration\nof the web server.\n\n    If the control of the web server is done via control files, verify who has\nupdate access to them. If tools are being used to configure the web server,\ndetermine who has access to execute the tools.\n\n    If accounts other than the System Administrator, Web Manager, or the Web\nManager designees have access to the web administration tool or control files,\nthis is a finding.\n  \"\n  desc 'fix', \"Restrict access to the web administration tool to only the\nSystem Administrator, Web Manager, or the Web Manager designees.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000340-WSR-000029'\n  tag gid: 'V-92817'\n  tag rid: 'SV-102905r1_rule'\n  tag stig_id: 'AS24-U2-000700'\n  tag fix_id: 'F-99061r1_fix'\n  tag cci: ['CCI-002235']\n  tag nist: ['AC-6 (10)']\n\n  describe 'Review access to the web administration tool' do\n    skip \"If accounts other than the System Administrator (SA), the Web Manager, or the Web Manager designees have access to the\n    web administration tool or control files, this is a finding. Determine which tool or control file is used to control the\n    configuration of the web server. If the control of the web server is done via control files, verify who has update access to them.\n    If tools are being used to configure the web server, determine who has access to execute the tools.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92817.rb","line":1},"id":"V-92817"},{"title":"The Apache web server application, libraries, and configuration files\nmust only be accessible to privileged users.","desc":"The Apache web server can be modified through parameter modification,\npatch installation, upgrades to the Apache web server or modules, and security\nparameter changes. With each of these changes, there is the potential for an\nadverse effect such as a denial of service (DoS), Apache web server\ninstability, or hosted application instability.\n\n    To limit changes to the Apache web server and limit exposure to any adverse\neffects from the changes, files such as the Apache web server application\nfiles, libraries, and configuration files must have permissions and ownership\nset properly to only allow privileged users access.","descriptions":{"default":"The Apache web server can be modified through parameter modification,\npatch installation, upgrades to the Apache web server or modules, and security\nparameter changes. With each of these changes, there is the potential for an\nadverse effect such as a denial of service (DoS), Apache web server\ninstability, or hosted application instability.\n\n    To limit changes to the Apache web server and limit exposure to any adverse\neffects from the changes, files such as the Apache web server application\nfiles, libraries, and configuration files must have permissions and ownership\nset properly to only allow privileged users access.","rationale":"","check":"Obtain a list of the user accounts for the system, noting the privileges\nfor each account.\n\n    Verify with the System Administrator (SA) or the Information System\nSecurity Officer (ISSO) that all privileged accounts are mission essential and\ndocumented.\n\n    Verify with the SA or the ISSO that all non-administrator access to shell\nscripts and operating system functions are mission essential and documented.\n\n    If undocumented privileged accounts are found, this is a finding.\n\n    If undocumented access to shell scripts or operating system functions is\npresent, this is a finding.","fix":"Ensure non-administrators are not allowed access to the\ndirectory tree, the shell, or other operating system functions and utilities."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000380-WSR-000072","gid":"V-92819","rid":"SV-102907r1_rule","stig_id":"AS24-U2-000780","fix_id":"F-99063r1_fix","cci":["CCI-001813"],"nist":["CM-5 (1)"]},"code":"control 'V-92819' do\n  title \"The Apache web server application, libraries, and configuration files\nmust only be accessible to privileged users.\"\n  desc  \"The Apache web server can be modified through parameter modification,\npatch installation, upgrades to the Apache web server or modules, and security\nparameter changes. With each of these changes, there is the potential for an\nadverse effect such as a denial of service (DoS), Apache web server\ninstability, or hosted application instability.\n\n    To limit changes to the Apache web server and limit exposure to any adverse\neffects from the changes, files such as the Apache web server application\nfiles, libraries, and configuration files must have permissions and ownership\nset properly to only allow privileged users access.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Obtain a list of the user accounts for the system, noting the privileges\nfor each account.\n\n    Verify with the System Administrator (SA) or the Information System\nSecurity Officer (ISSO) that all privileged accounts are mission essential and\ndocumented.\n\n    Verify with the SA or the ISSO that all non-administrator access to shell\nscripts and operating system functions are mission essential and documented.\n\n    If undocumented privileged accounts are found, this is a finding.\n\n    If undocumented access to shell scripts or operating system functions is\npresent, this is a finding.\n  \"\n  desc 'fix', \"Ensure non-administrators are not allowed access to the\ndirectory tree, the shell, or other operating system functions and utilities.\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000380-WSR-000072'\n  tag gid: 'V-92819'\n  tag rid: 'SV-102907r1_rule'\n  tag stig_id: 'AS24-U2-000780'\n  tag fix_id: 'F-99063r1_fix'\n  tag cci: ['CCI-001813']\n  tag nist: ['CM-5 (1)']\n\n  describe 'The Apache web server application, libraries, and configuration files must only be accessible to privileged users.' do\n    skip \"Obtain a list of the user accounts for the system, noting the privileges for each account.\n      Verify with the System Administrator (SA) or the Information System Security Officer (ISSO) that all privileged accounts are mission essential and documented.\n      Verify with the SA or the ISSO that all non-administrator access to shell scripts and operating system functions are mission essential and documented.\n      If undocumented privileged accounts are found, this is a finding.\n      If undocumented access to shell scripts or operating system functions is present, this is a finding.\"\n  end\nend\n","source_location":{"ref":"./controls/V-92819.rb","line":1},"id":"V-92819"},{"title":"The Apache web server must only accept client certificates issued by\nDoD PKI or DoD-approved PKI Certification Authorities (CAs).","desc":"Non-DoD approved PKIs have not been evaluated to ensure that they have\nsecurity controls and identity vetting procedures in place that are sufficient\nfor DoD systems to rely on the identity asserted in the certificate. PKIs\nlacking sufficient security controls and identity vetting procedures risk being\ncompromised and issuing certificates that enable adversaries to impersonate\nlegitimate users.","descriptions":{"default":"Non-DoD approved PKIs have not been evaluated to ensure that they have\nsecurity controls and identity vetting procedures in place that are sufficient\nfor DoD systems to rely on the identity asserted in the certificate. PKIs\nlacking sufficient security controls and identity vetting procedures risk being\ncompromised and issuing certificates that enable adversaries to impersonate\nlegitimate users.","rationale":"","check":"In a command line, run \"httpd -M | grep -i ssl_module\".\n\n    If the \"ssl_module\" is not found, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"SSLCACertificateFile\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"SSLCACertificateFile\"\n\n    Review the path of the \"SSLCACertificateFile\" directive.\n\n    Review the contents of <'path of SSLCACertificateFile'>\\ca-bundle.crt.\n\n    Examine the contents of this file to determine if the trusted CAs are DoD\napproved.\n\n    If the trusted CA that is used to authenticate users to the website does\nnot lead to an approved DoD CA, this is a finding.\n\n    NOTE: There are non-DoD roots that must be on the server for it to\nfunction. Some applications, such as antivirus programs, require root CAs to\nfunction. DoD-approved certificate can include the External Certificate\nAuthorities (ECA) if approved by the AO. The PKE InstallRoot 3.06 System\nAdministrator Guide (SAG), dated 08 Jul 2008, contains a complete list of DoD,\nECA, and IECA CAs.","fix":"Configure the web server’s trust store to trust only\nDoD-approved PKIs (e.g., DoD PKI, DoD ECA, and DoD-approved external partners)."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000427-WSR-000186","gid":"V-92821","rid":"SV-102909r1_rule","stig_id":"AS24-U2-000810","fix_id":"F-99065r1_fix","cci":["CCI-002470"],"nist":["SC-23 (5)"]},"code":"control 'V-92821' do\n  title \"The Apache web server must only accept client certificates issued by\nDoD PKI or DoD-approved PKI Certification Authorities (CAs).\"\n  desc  \"Non-DoD approved PKIs have not been evaluated to ensure that they have\nsecurity controls and identity vetting procedures in place that are sufficient\nfor DoD systems to rely on the identity asserted in the certificate. PKIs\nlacking sufficient security controls and identity vetting procedures risk being\ncompromised and issuing certificates that enable adversaries to impersonate\nlegitimate users.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i ssl_module\\\".\n\n    If the \\\"ssl_module\\\" is not found, this is a finding.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the \\\"SSLCACertificateFile\\\" directive:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"SSLCACertificateFile\\\"\n\n    Review the path of the \\\"SSLCACertificateFile\\\" directive.\n\n    Review the contents of <'path of SSLCACertificateFile'>\\\\ca-bundle.crt.\n\n    Examine the contents of this file to determine if the trusted CAs are DoD\napproved.\n\n    If the trusted CA that is used to authenticate users to the website does\nnot lead to an approved DoD CA, this is a finding.\n\n    NOTE: There are non-DoD roots that must be on the server for it to\nfunction. Some applications, such as antivirus programs, require root CAs to\nfunction. DoD-approved certificate can include the External Certificate\nAuthorities (ECA) if approved by the AO. The PKE InstallRoot 3.06 System\nAdministrator Guide (SAG), dated 08 Jul 2008, contains a complete list of DoD,\nECA, and IECA CAs.\n  \"\n  desc 'fix', \"Configure the web server’s trust store to trust only\nDoD-approved PKIs (e.g., DoD PKI, DoD ECA, and DoD-approved external partners).\"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000427-WSR-000186'\n  tag gid: 'V-92821'\n  tag rid: 'SV-102909r1_rule'\n  tag stig_id: 'AS24-U2-000810'\n  tag fix_id: 'F-99065r1_fix'\n  tag cci: ['CCI-002470']\n  tag nist: ['SC-23 (5)']\n\n  config_path = input('config_path')\n  ssl_module = command('httpd -M | grep -i ssl_module')\n  cert_location = apache_conf(config_path).params('SSLCACertificateFile')\n\n  describe 'Module ssl_module should be installed' do\n    subject { ssl_module.stdout.strip }\n    it { should_not cmp '' }\n  end\n\n  DELIMITER = \"\\n-----END CERTIFICATE-----\\n\".freeze\n  ca_bundle = file(cert_location[0]).content\n  ca_certs = ca_bundle.split(DELIMITER)\n  ca_certs.each do |ca_cert|\n    ca_cert += DELIMITER\n\n    describe x509_certificate(content: ca_cert) do\n      its('issuer.CN') { should cmp 'GTE CyberTrust Root' }\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92821.rb","line":1},"id":"V-92821"},{"title":"The Apache web server cookies, such as session cookies, sent to the\nclient using SSL/TLS must not be compressed.","desc":"A cookie is used when a web server needs to share data with the\nclient's browser. The data is often used to remember the client when the client\nreturns to the hosted application at a later date. A session cookie is a\nspecial type of cookie used to remember the client during the session. The\ncookie will contain the session identifier (ID) and may contain authentication\ndata to the hosted application. To protect this data from easily being\ncompromised, the cookie can be encrypted.\n\n    When a cookie is sent encrypted via SSL/TLS, an attacker must spend a great\ndeal of time and resources to decrypt the cookie. If, along with encryption,\nthe cookie is compressed, the attacker can now use a combination of plaintext\ninjection and inadvertent information leakage through data compression to\nreduce the time needed to decrypt the cookie. This attack is called Compression\nRatio Info-leak Made Easy (CRIME).\n\n    Cookies shared between the Apache web server and the client when encrypted\nshould not also be compressed.","descriptions":{"default":"A cookie is used when a web server needs to share data with the\nclient's browser. The data is often used to remember the client when the client\nreturns to the hosted application at a later date. A session cookie is a\nspecial type of cookie used to remember the client during the session. The\ncookie will contain the session identifier (ID) and may contain authentication\ndata to the hosted application. To protect this data from easily being\ncompromised, the cookie can be encrypted.\n\n    When a cookie is sent encrypted via SSL/TLS, an attacker must spend a great\ndeal of time and resources to decrypt the cookie. If, along with encryption,\nthe cookie is compressed, the attacker can now use a combination of plaintext\ninjection and inadvertent information leakage through data compression to\nreduce the time needed to decrypt the cookie. This attack is called Compression\nRatio Info-leak Made Easy (CRIME).\n\n    Cookies shared between the Apache web server and the client when encrypted\nshould not also be compressed.","rationale":"","check":"In a command line, run \"httpd -M | grep -i ssl_module\".\n\n    If \"ssl_module\" is not listed, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    If the \"SSLCompression\" directive does not exist or is set to \"on\",\nthis is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Ensure the \"SSLCompression\" is added and looks like the following:\n\n    SSLCompression off\n\n    Restart Apache: apachectl restart"},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000439-WSR-000153","gid":"V-92831","rid":"SV-102919r1_rule","stig_id":"AS24-U2-000870","fix_id":"F-99075r1_fix","cci":["CCI-002418"],"nist":["SC-8"]},"code":"control 'V-92831' do\n  title \"The Apache web server cookies, such as session cookies, sent to the\nclient using SSL/TLS must not be compressed.\"\n  desc  \"A cookie is used when a web server needs to share data with the\nclient's browser. The data is often used to remember the client when the client\nreturns to the hosted application at a later date. A session cookie is a\nspecial type of cookie used to remember the client during the session. The\ncookie will contain the session identifier (ID) and may contain authentication\ndata to the hosted application. To protect this data from easily being\ncompromised, the cookie can be encrypted.\n\n    When a cookie is sent encrypted via SSL/TLS, an attacker must spend a great\ndeal of time and resources to decrypt the cookie. If, along with encryption,\nthe cookie is compressed, the attacker can now use a combination of plaintext\ninjection and inadvertent information leakage through data compression to\nreduce the time needed to decrypt the cookie. This attack is called Compression\nRatio Info-leak Made Easy (CRIME).\n\n    Cookies shared between the Apache web server and the client when encrypted\nshould not also be compressed.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i ssl_module\\\".\n\n    If \\\"ssl_module\\\" is not listed, this is a finding.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    If the \\\"SSLCompression\\\" directive does not exist or is set to \\\"on\\\",\nthis is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Ensure the \\\"SSLCompression\\\" is added and looks like the following:\n\n    SSLCompression off\n\n    Restart Apache: apachectl restart\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000439-WSR-000153'\n  tag gid: 'V-92831'\n  tag rid: 'SV-102919r1_rule'\n  tag stig_id: 'AS24-U2-000870'\n  tag fix_id: 'F-99075r1_fix'\n  tag cci: ['CCI-002418']\n  tag nist: ['SC-8']\n\n  config_path = input('config_path')\n  ssl_module = command('httpd -M | grep -i ssl_module').stdout\n\n  describe ssl_module do\n    it { should include 'ssl_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('SSLCompression') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SSLCompression.nil?\n    apache_conf(config_path).SSLCompression.each do |value|\n      describe 'SSLCompression value should be set to off' do\n        subject { value }\n        it { should cmp 'off' }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92831.rb","line":1},"id":"V-92831"},{"title":"Cookies exchanged between the Apache web server and the client, such\nas session cookies, must have cookie properties set to prohibit client-side\nscripts from reading the cookie data.","desc":"A cookie can be read by client-side scripts easily if cookie\nproperties are not set properly. By allowing cookies to be read by the\nclient-side scripts, information such as session identifiers could be\ncompromised and used by an attacker who intercepts the cookie. Setting cookie\nproperties (i.e., HttpOnly property) to disallow client-side scripts from\nreading cookies better protects the information inside the cookie.","descriptions":{"default":"A cookie can be read by client-side scripts easily if cookie\nproperties are not set properly. By allowing cookies to be read by the\nclient-side scripts, information such as session identifiers could be\ncompromised and used by an attacker who intercepts the cookie. Setting cookie\nproperties (i.e., HttpOnly property) to disallow client-side scripts from\nreading cookies better protects the information inside the cookie.","rationale":"","check":"In a command line, run \"httpd -M | grep -i session_cookie_module\".\n\n    Review the \"httpd.conf\" file.\n\n    If the \"Session\" and \"SessionCookieName\" directives are not present,\nthis is a finding.\n\n    If \"Session\" is not \"on\" and \"SessionCookieName\" does not contain\n\"httpOnly\" and \"secure\", this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Set \"Session\" to \"on\".\n\n    Ensure the \"SessionCookieName\" directive includes \"httpOnly\" and\n\"secure\"."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000439-WSR-000154","gid":"V-92833","rid":"SV-102921r1_rule","stig_id":"AS24-U2-000880","fix_id":"F-99077r1_fix","cci":["CCI-002418"],"nist":["SC-8"]},"code":"control 'V-92833' do\n  title \"Cookies exchanged between the Apache web server and the client, such\nas session cookies, must have cookie properties set to prohibit client-side\nscripts from reading the cookie data.\"\n  desc  \"A cookie can be read by client-side scripts easily if cookie\nproperties are not set properly. By allowing cookies to be read by the\nclient-side scripts, information such as session identifiers could be\ncompromised and used by an attacker who intercepts the cookie. Setting cookie\nproperties (i.e., HttpOnly property) to disallow client-side scripts from\nreading cookies better protects the information inside the cookie.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i session_cookie_module\\\".\n\n    Review the \\\"httpd.conf\\\" file.\n\n    If the \\\"Session\\\" and \\\"SessionCookieName\\\" directives are not present,\nthis is a finding.\n\n    If \\\"Session\\\" is not \\\"on\\\" and \\\"SessionCookieName\\\" does not contain\n\\\"httpOnly\\\" and \\\"secure\\\", this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Set \\\"Session\\\" to \\\"on\\\".\n\n    Ensure the \\\"SessionCookieName\\\" directive includes \\\"httpOnly\\\" and\n\\\"secure\\\".\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000439-WSR-000154'\n  tag gid: 'V-92833'\n  tag rid: 'SV-102921r1_rule'\n  tag stig_id: 'AS24-U2-000880'\n  tag fix_id: 'F-99077r1_fix'\n  tag cci: ['CCI-002418']\n  tag nist: ['SC-8']\n\n  config_path = input('config_path')\n  session_cookie_module = command('http -M | grep -i session_cookie_module').stdout\n\n  describe session_cookie_module do\n    it { should include 'session_cookie_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('SessionCookieName') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SessionCookieName.nil?\n    apache_conf(config_path).SessionCookieName.each do |value|\n      describe 'SessionCookieName value should return httpOnly and Secure' do\n        subject { value }\n        it { should include 'httpOnly' }\n        it { should include 'Secure' }\n      end\n    end\n  end\n\n  describe apache_conf(config_path) do\n    its('Session') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).Session.nil?\n    apache_conf(config_path).Session.each do |value|\n      describe 'Session value should be set to on' do\n        subject { value }\n        it { should cmp 'on' }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92833.rb","line":1},"id":"V-92833"},{"title":"Cookies exchanged between the Apache web server and the client, such\nas session cookies, must have cookie properties set to force the encryption of\ncookies.","desc":"Cookies can be sent to a client using TLS/SSL to encrypt the cookies,\nbut TLS/SSL is not used by every hosted application since the data being\ndisplayed does not require the encryption of the transmission. To safeguard\nagainst cookies, especially session cookies, being sent in plaintext, a cookie\ncan be encrypted before transmission. To force a cookie to be encrypted before\ntransmission, the cookie \"Secure\" property can be set.","descriptions":{"default":"Cookies can be sent to a client using TLS/SSL to encrypt the cookies,\nbut TLS/SSL is not used by every hosted application since the data being\ndisplayed does not require the encryption of the transmission. To safeguard\nagainst cookies, especially session cookies, being sent in plaintext, a cookie\ncan be encrypted before transmission. To force a cookie to be encrypted before\ntransmission, the cookie \"Secure\" property can be set.","rationale":"","check":"In a command line, run \"httpd -M | grep -i session_cookie_module\".\n\n    If \"session_cookie_module\" is not listed, this is a finding.\n\n    Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Search for the \"Session\" and \"SessionCookieName\" directives:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \"Session\"\n    # cat /<path_to_file>/httpd.conf | grep -i \"SessionCookieName\"\n\n    If \"Session\" is not \"on\" and \"SessionCookieName\" does not contain\n\"httpOnly\" and \"secure\", this is a finding.","fix":"Determine the location of the \"HTTPD_ROOT\" directory and the\n\"httpd.conf\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\"/etc/httpd\"\n    -D SERVER_CONFIG_FILE=\"conf/httpd.conf\"\n\n    Set \"Session\" to \"on\".\n\n    Ensure the \"SessionCookieName\" directive includes \"httpOnly\" and\n\"secure\"."},"impact":0.5,"refs":[],"tags":{"severity":"medium","gtitle":"SRG-APP-000439-WSR-000155","gid":"V-92835","rid":"SV-102923r1_rule","stig_id":"AS24-U2-000890","fix_id":"F-99079r1_fix","cci":["CCI-002418"],"nist":["SC-8"]},"code":"control 'V-92835' do\n  title \"Cookies exchanged between the Apache web server and the client, such\nas session cookies, must have cookie properties set to force the encryption of\ncookies.\"\n  desc  \"Cookies can be sent to a client using TLS/SSL to encrypt the cookies,\nbut TLS/SSL is not used by every hosted application since the data being\ndisplayed does not require the encryption of the transmission. To safeguard\nagainst cookies, especially session cookies, being sent in plaintext, a cookie\ncan be encrypted before transmission. To force a cookie to be encrypted before\ntransmission, the cookie \\\"Secure\\\" property can be set.\"\n  desc  'rationale', ''\n  desc  'check', \"\n    In a command line, run \\\"httpd -M | grep -i session_cookie_module\\\".\n\n    If \\\"session_cookie_module\\\" is not listed, this is a finding.\n\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Search for the \\\"Session\\\" and \\\"SessionCookieName\\\" directives:\n\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"Session\\\"\n    # cat /<path_to_file>/httpd.conf | grep -i \\\"SessionCookieName\\\"\n\n    If \\\"Session\\\" is not \\\"on\\\" and \\\"SessionCookieName\\\" does not contain\n\\\"httpOnly\\\" and \\\"secure\\\", this is a finding.\n  \"\n  desc 'fix', \"\n    Determine the location of the \\\"HTTPD_ROOT\\\" directory and the\n\\\"httpd.conf\\\" file:\n\n    # httpd -V | egrep -i 'httpd_root|server_config_file'\n    -D HTTPD_ROOT=\\\"/etc/httpd\\\"\n    -D SERVER_CONFIG_FILE=\\\"conf/httpd.conf\\\"\n\n    Set \\\"Session\\\" to \\\"on\\\".\n\n    Ensure the \\\"SessionCookieName\\\" directive includes \\\"httpOnly\\\" and\n\\\"secure\\\".\n  \"\n  impact 0.5\n  tag severity: 'medium'\n  tag gtitle: 'SRG-APP-000439-WSR-000155'\n  tag gid: 'V-92835'\n  tag rid: 'SV-102923r1_rule'\n  tag stig_id: 'AS24-U2-000890'\n  tag fix_id: 'F-99079r1_fix'\n  tag cci: ['CCI-002418']\n  tag nist: ['SC-8']\n\n  config_path = input('config_path')\n  session_cookie_module = command('http -M | grep -i session_cookie_module').stdout\n\n  describe session_cookie_module do\n    it { should include 'session_cookie_module' }\n  end\n\n  describe apache_conf(config_path) do\n    its('SessionCookieName') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).SessionCookieName.nil?\n    apache_conf(config_path).SessionCookieName.each do |value|\n      describe 'SessionCookieName value should return httpOnly and Secure' do\n        subject { value }\n        it { should include 'httpOnly' }\n        it { should include 'Secure' }\n      end\n    end\n  end\n\n  describe apache_conf(config_path) do\n    its('Session') { should_not be_nil }\n  end\n\n  unless apache_conf(config_path).Session.nil?\n    apache_conf(config_path).Session.each do |value|\n      describe 'Session value should be set to on' do\n        subject { value }\n        it { should cmp 'on' }\n      end\n    end\n  end\nend\n","source_location":{"ref":"./controls/V-92835.rb","line":1},"id":"V-92835"},{"title":"The Apache web server must be configured in accordance with the\nsecurity configuration settings based on DoD security configuration or\nimplementation guidance, including STIGs, NSA configuration guides, CTOs, and\nDTMs.","desc":"Configuring the Apache web server to implement organization-wide\nsecurity implementation guides and security checklists guarantees compliance\nwith federal standards and establishes a common security baseline across the\nDoD that reflects the most restrictive security posture consistent with\noperational requirements.\n\n    Configuration settings are the set of parameters that can be changed that\naffect the security posture and/or functionality of the system.\nSecurity-related parameters are parameters impacting the security state of the\nApache web server, including the parameters required to satisfy other security\ncontrol requirements.","descriptions":{"default":"Configuring the Apache web server to implement organization-wide\nsecurity implementation guides and security checklists guarantees compliance\nwith federal standards and establishes a common security baseline across the\nDoD that reflects the most restrictive security posture consistent with\noperational requirements.\n\n    Configuration settings are the set of parameters that can be changed that\naffect the security posture and/or functionality of the system.\nSecurity-related parameters are parameters impacting the security state of the\nApache web server, including the parameters required to satisfy other security\ncontrol requirements.","rationale":"","check":"Review the website to determine if HTTP and HTTPs are used in accordance\nwith well-known ports (e.g., 80 and 443) or those ports and services as\nregistered and approved for use by the DoD PPSM.\n\n    Verify that any variation in PPS is documented, registered, and approved by\nthe PPSM.\n\n    If well-known ports and services are not approved for used by PPSM, this is\na finding.","fix":"Ensure the website enforces the use of IANA well-known ports\nfor HTTP and HTTPS."},"impact":0.3,"refs":[],"tags":{"severity":"low","gtitle":"SRG-APP-000516-WSR-000174","gid":"V-92843","rid":"SV-102931r1_rule","stig_id":"AS24-U2-000960","fix_id":"F-99087r1_fix","cci":["CCI-000366"],"nist":["CM-6 b"]},"code":"control 'V-92843' do\n  title \"The Apache web server must be configured in accordance with the\nsecurity configuration settings based on DoD security configuration or\nimplementation guidance, including STIGs, NSA configuration guides, CTOs, and\nDTMs.\"\n  desc  \"Configuring the Apache web server to implement organization-wide\nsecurity implementation guides and security checklists guarantees compliance\nwith federal standards and establishes a common security baseline across the\nDoD that reflects the most restrictive security posture consistent with\noperational requirements.\n\n    Configuration settings are the set of parameters that can be changed that\naffect the security posture and/or functionality of the system.\nSecurity-related parameters are parameters impacting the security state of the\nApache web server, including the parameters required to satisfy other security\ncontrol requirements.\n  \"\n  desc  'rationale', ''\n  desc  'check', \"\n    Review the website to determine if HTTP and HTTPs are used in accordance\nwith well-known ports (e.g., 80 and 443) or those ports and services as\nregistered and approved for use by the DoD PPSM.\n\n    Verify that any variation in PPS is documented, registered, and approved by\nthe PPSM.\n\n    If well-known ports and services are not approved for used by PPSM, this is\na finding.\n  \"\n  desc 'fix', \"Ensure the website enforces the use of IANA well-known ports\nfor HTTP and HTTPS.\"\n  impact 0.3\n  tag severity: 'low'\n  tag gtitle: 'SRG-APP-000516-WSR-000174'\n  tag gid: 'V-92843'\n  tag rid: 'SV-102931r1_rule'\n  tag stig_id: 'AS24-U2-000960'\n  tag fix_id: 'F-99087r1_fix'\n  tag cci: ['CCI-000366']\n  tag nist: ['CM-6 b']\n\n  describe 'Review the website to determine if HTTP and HTTPs are used in accordance with well-known ports' do\n    skip \"Ensure the website enforces the use of IANA well-known ports for \\\"HTTP\\\" and \\\"HTTPS\\\" (e.g., 80 and 443) or\n      those ports and services as registered and approved for use by the DoD PPSM.\n      Verify that any variation in PPS is documented, registered, and approved by the PPSM.\n      If well-known ports and services are not approved for used by PPSM, this is a finding\n      \"\n  end\nend\n","source_location":{"ref":"./controls/V-92843.rb","line":1},"id":"V-92843"}],"groups":[{"title":null,"controls":["V-92761"],"id":"controls/V-92761.rb"},{"title":null,"controls":["V-92763"],"id":"controls/V-92763.rb"},{"title":null,"controls":["V-92769"],"id":"controls/V-92769.rb"},{"title":null,"controls":["V-92771"],"id":"controls/V-92771.rb"},{"title":null,"controls":["V-92773"],"id":"controls/V-92773.rb"},{"title":null,"controls":["V-92775"],"id":"controls/V-92775.rb"},{"title":null,"controls":["V-92777"],"id":"controls/V-92777.rb"},{"title":null,"controls":["V-92779"],"id":"controls/V-92779.rb"},{"title":null,"controls":["V-92781"],"id":"controls/V-92781.rb"},{"title":null,"controls":["V-92785"],"id":"controls/V-92785.rb"},{"title":null,"controls":["V-92787"],"id":"controls/V-92787.rb"},{"title":null,"controls":["V-92795"],"id":"controls/V-92795.rb"},{"title":null,"controls":["V-92797"],"id":"controls/V-92797.rb"},{"title":null,"controls":["V-92799"],"id":"controls/V-92799.rb"},{"title":null,"controls":["V-92801"],"id":"controls/V-92801.rb"},{"title":null,"controls":["V-92803"],"id":"controls/V-92803.rb"},{"title":null,"controls":["V-92805"],"id":"controls/V-92805.rb"},{"title":null,"controls":["V-92807"],"id":"controls/V-92807.rb"},{"title":null,"controls":["V-92809"],"id":"controls/V-92809.rb"},{"title":null,"controls":["V-92811"],"id":"controls/V-92811.rb"},{"title":null,"controls":["V-92815"],"id":"controls/V-92815.rb"},{"title":null,"controls":["V-92817"],"id":"controls/V-92817.rb"},{"title":null,"controls":["V-92819"],"id":"controls/V-92819.rb"},{"title":null,"controls":["V-92821"],"id":"controls/V-92821.rb"},{"title":null,"controls":["V-92831"],"id":"controls/V-92831.rb"},{"title":null,"controls":["V-92833"],"id":"controls/V-92833.rb"},{"title":null,"controls":["V-92835"],"id":"controls/V-92835.rb"},{"title":null,"controls":["V-92843"],"id":"controls/V-92843.rb"}],"sha256":"51d9e76c89bf5bd958a6807bcf8e75f3e3a6caba6e6f411a3c8bfbb4c70f3ed5","status_message":"","status":"loaded","generator":{"name":"inspec","version":"5.22.3"}}
